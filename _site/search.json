[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "",
    "text": "In this hands-on exercise, you will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#one-sample-test-gghistostats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#one-sample-test-gghistostats",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "2.1 One-sample test: gghistostats()",
    "text": "2.1 One-sample test: gghistostats()\n\n\nShow the code: One-sample test(gghistostats)\nset.seed(1234)  \n\n#Setting a seed ensures that the same random numbers are generated each time the code is run, aiding in achieving result reproducibility\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\nUnpacking the Bayes Factor:\nIn this hands-on exercise, you will gain hands-on experience on using:\n\nggstatsplot package to create visual graphics with rich statistical information,\nperformance package to visualise model diagnostics, and\nparameters package to visualise model parameters\n\nHow to interpret Bayes Factor:\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#two-sample-mean-test-ggbetweenstats",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "2.2 Two-sample mean test: ggbetweenstats()",
    "text": "2.2 Two-sample mean test: ggbetweenstats()\n\n\nShow the code: Two-sample mean test(ggbetweenstats)\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#oneway-anova-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#oneway-anova-test-ggbetweenstats",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "2.3 Oneway ANOVA Test: ggbetweenstats()",
    "text": "2.3 Oneway ANOVA Test: ggbetweenstats()\n\n\nShow the code: Oneway ANOVA Test(ggbetweenstats)\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#significant-test-of-correlation-ggscatterstats",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "2.4 Significant Test of Correlation: ggscatterstats()",
    "text": "2.4 Significant Test of Correlation: ggscatterstats()\n\n\nShow the code: Significant Test of Correlation(ggscatterstats)\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#significant-test-of-association-depedence-ggbarstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#significant-test-of-association-depedence-ggbarstats",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "2.5 Significant Test of Association (Depedence) : ggbarstats",
    "text": "2.5 Significant Test of Association (Depedence) : ggbarstats\n\n\nShow the code: Significant Test of Association (Depedence) : (ggbarstats)\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#getting-started-1",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "3.1 Getting started",
    "text": "3.1 Getting started\n\n\nShow the code: Load R packages\npacman::p_load(readxl, performance, parameters, see)\n\n\n\n\nShow the code: Import data\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\nNotice that the output object car_resale is a tibble data frame."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-1",
    "title": "Peer Critique & DataVis Makeover",
    "section": "3.1 Chart 1",
    "text": "3.1 Chart 1\n\nOriginal Design\n\n\n\nCritique\n\n\nClarity:\n\nGood Points:\n\nSpecific values are labeled above each bar, facilitating comparison.\nMedian and mean are marked with different colored dashed lines, accompanied by text and numerical values.\nThe meaning expressed by the plot title and axes title is clear.\n\nWeak Points:\n\nThe overall shape of the histogram is not pronounced, lacking a curve to visually represent the distribution of data.\n\n\nAesthetics:\n\nGood Points:\n\nDifferent colors are used to distinguish the filling and outline of the histogram.\nConsistency in color between dashed lines representing the same data and the color of text labels; a clear differentiation of colors for the median and mean.\n\nWeak Points:\n\nThere are too many data labels on the bars. For example, displaying data above the bars is unnecessary as the length differences between bars are already apparent, and adding data for comparison is not needed.\nThe X-axis has an excessive number of ticks, while the Y-axis has few ticks.\n\n\n\n\n\nRedesign\n\n\nShow the code: redesign sketch\n# Calculate histogram\nhist_data &lt;- hist(stu_df$Average_Score, breaks = 20, plot = FALSE)\n\n# Find the position of the highest point\nmax_count &lt;- max(hist_data$counts)\nmax_index &lt;- which(hist_data$counts == max_count)\nmode_x &lt;- hist_data$mids[max_index]\n\n# Calculate mean and median\naverage_sci &lt;- mean(stu_df$Average_Score, na.rm = TRUE)\nmedian_sci &lt;- median(stu_df$Average_Score, na.rm = TRUE)\n\np1 &lt;-ggplot(stu_df, aes(x = Average_Score)) +\n  geom_histogram(aes(y = ..density..), bins = 20, color = \"grey95\", fill = \"cadetblue3\",alpha=0.7) +\n  geom_density(color = \"black\", lwd = 1) +\n  \n  # Add points for mean, median, and mode\n  geom_point(data = data.frame(x = c(average_sci, median_sci, mode_x),\n                                y = c(0, 0, 0),\n                                label = c(\"Mean\", \"Median\", \"Mode\")),\n             aes(x = x, y = y, color = label), shape = 16, size = 3, show.legend = TRUE) + \n  \n  labs(title = \"Distribution of Total Average Scores\",\n       x = \"Total Average Score\",\n       y = \"Density\", \n       color = \"Data point\") +\n  theme_clean() + \n  theme(legend.position = \"top\",\n        plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA),  \n        plot.title = element_text(hjust = 0.5, size = 25),  \n        plot.subtitle = element_text(hjust = 0.5, size = 10), \n        axis.title = element_text(size = 12, face = \"bold\"),\n        axis.title.y = element_text(size = 12, face = \"bold\", angle = 0, vjust = 1),\n        axis.text = element_text(size = 10),  \n        axis.text.y = element_text(size = 10),\n        plot.margin = margin(10, 10, 10, 10))\nggsave(\"images/Redesign1.jpg\", width = 25, height = 15, units = \"cm\")\n\n\n\n\n\n\n\n\nOptimized Points：\n\nChange the histogram to a density plot with both bars and curves, as a density plot can also depict the distribution of data.\nIncrease the font size and bold the titles of the plot, X-axis, and Y-axis.\nEnlarge the scale of the X-axis and reduce the scale of the Y-axis.\nAdd horizontal grid lines to facilitate readers in observing the probability density of the data intervals.\nDifferentiate the positions of mean, median, and mode on the X-axis and Y-axis using different colors, and add a legend for the data points.\nAdd a legend below the graph title and enclose it in a box.\n\nThe improvements made above allow readers to directly observe the distribution of the total average score: the skewness of curve and the size comparison of “mean &lt; median &lt; mode” both indicate that the data distribution of the total average score is left-skewed."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-2",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-2",
    "title": "Peer Critique & DataVis Makeover",
    "section": "3.2 Chart 2",
    "text": "3.2 Chart 2\n\nOriginal Design\n\n\n\nCritique\n\n\nClarity:\n\nGood Points:\n\nThe meaning of the horizontal and vertical axis scales and titles is very clear.\nThe positions of the median and mean are marked in the graph, accompanied by specific numerical values and text.\nHorizontal gridlines are included.\nData points are differentiated by color, and points with the same data type have consistent shapes and colors. A legend is provided alongside the graph to explain the color-coding.\nOutliers are represented by black dots.\n\nWeek Points:\n\nTitle is too long and lacks information; the chart depicts the distribution of mathematical scores grouped by gender, with a crucial lack of gender information in the title.\nOutliers are represented by black dots but have not been explained.\n\n\nAesthetics:\n\nGood Points:\n\nThe groups of males and females are distinguished using colors.\n\nWeek Points:\n\nThe legend seems a bit redundant since the X-axis in the graph clearly distinguishes which plot corresponds to males and females; there is no need to include an additional legend.\nThe title is positioned in the top right corner of the entire graph, creating an imbalance in the overall composition.\nThe font size and positioning of the title and subtitle are close to each other.\n\n\n\n\n\nRedesign\n\n\nShow the code: redesign sketch\nmean_values &lt;- aggregate(Math_Average ~ Gender, data = stu_df, mean)\n\np2 &lt;- ggplot(stu_df, aes(x = factor(Gender), y = Math_Average, fill = factor(Gender))) +\n  stat_slab(aes(thickness=after_stat(pdf*n)),scale=0.4)+\n  stat_dotsinterval(side=\"bottom\", scale=0.4, slab_size=NA)+\n  \n  geom_point(data = mean_values, aes(y = Math_Average), \n             color = \"red\", size = 2) +\n  \n  stat_summary(fun = mean, geom = \"text\", \n               aes(label = paste(\"Mean:\", round(..y.., 0))), \n               position = position_nudge(y = 0.5), \n               size = 3, vjust = 2, col=\"red\") +\n  \n  stat_summary(fun = median, geom = \"text\", \n               aes(label = paste(\"Median:\", round(..y.., 0))), \n               position = position_nudge(y = 0.5), \n               size = 3, vjust = -1, col=\"black\") +\n\n  scale_fill_manual(values = c(\"1\" = \"pink3\", \"2\" = \"cadetblue3\"))+\n  scale_x_discrete(labels = c(\"1\" = \"Female\", \"2\" = \"Male\"))+\n  labs(title = \"Gender-Based Distribution of Math Scores\",\n       subtitle = \"(Black dot & Black text: Median score; Red dot & Red text: Mean score)\",\n       x = \"Gender\",\n       y = \"Math Score\") +\n  theme_clean() + \n  theme(legend.position = \"none\", \n          plot.background = element_rect(fill = \"white\", color = NA),  \n          panel.background = element_rect(fill = \"white\", color = NA),  \n          plot.title = element_text(hjust = 0.5, size = 20),  \n          plot.subtitle = element_text(hjust = 0.5, size = 10), \n          axis.title = element_text(size = 12, face = \"bold\"),\n          axis.title.y = element_text(size = 12, face = \"bold\", angle = 0, vjust =0.5),\n          plot.margin = margin(10, 20, 10, 10))+\n    coord_flip()\n\nggsave(\"images/Redesign2.jpg\", width = 20, height = 15, units = \"cm\")\n\n\n\n\n\n\n\n\nOptimized Points：\n\nThe main title and axis titles in the graph have been bolded and enlarged. The graph title is centered, and there is a difference in font size between the main title and the subtitle.\nThe titles have been modified, incorporating the key information of “gender.”\nThe original horizontal and vertical axes have been swapped to increase the overall width of the graph.\nThe violin plot has been replaced with a raincloud plot. In the raincloud plot, the “cloud” part is equivalent to a half-violin plot, serving the same function as the original violin plot. The “rain” part of the raincloud plot is a scatter plot, illustrating the differences in the number of individuals in each score range.\nThe width/height of the boxplot has been increased, presenting it as a slightly thicker line in the middle, where the thicker part represents the box.\nData points are represented as dots, with different colors filling different types of data points. Text is included to indicate the data type and value. The size of points for different data types reflects the magnitude of the values. For example, if the median is greater than the mean, the shape of the mean point is larger than that of the median point.\n\nThe improved graph facilitates readers in comparing the distribution of math scores among different gender groups. Horizontally, the position, color, and values of data points can be compared within and between groups."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-3",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-3",
    "title": "Peer Critique & DataVis Makeover",
    "section": "3.3 Chart 3",
    "text": "3.3 Chart 3\n\nOriginal Design\n\n\n\nCritique\n\n\nClarity:\n\nGood Points:\n\nSome of the outliers are labeled text.\n\nWeek Points:\n\nThe tick labels on the horizontal axis are unclear and do not clearly represent their specific meanings.\nThe meanings of the text labels have not been explained.\nIt is not always clear which outlier point the text labels are pointing to.\nThe positions of the medians in the box plot are too close, and there are no reference lines for comparison.\n\n\nAesthetics:\n\nGood Points:\n\nThe plots for different groups have been designed in different colors.\n\nWeek Points:\n\nThe title is positioned too far to the left, affecting the overall symmetry of the graph.\nThe font size of axis titles and tick labels is too close.\nThere are too many text labels, contributing to clutter.\n\n\n\n\n\nRedesign\n\n\nShow the code: redesign sketch\n# Define Score by choosing a specific type, e.g., Math_Average\nScore_long &lt;- Score_by_School %&gt;%\n  pivot_longer(\n    cols = c(\"Math_Average\", \"Reading_Average\", \"Science_Average\", \"Average_score\"),\n    names_to = \"Score_Type\",\n    values_to = \"Score\"\n  )\n\n# Calculate outliers using the IQR method\noutliers &lt;- Score_long %&gt;%\n  group_by(Score_Type) %&gt;%\n  summarize(\n    lower_limit = quantile(Score, 0.25) - 1.5 * IQR(Score),\n    upper_limit = quantile(Score, 0.75) + 1.5 * IQR(Score)\n  ) %&gt;%\n  left_join(Score_long, by = \"Score_Type\") %&gt;%\n  filter(Score &lt; lower_limit | Score &gt; upper_limit)\n\n# Identify the top 3 and bottom 2 schools for each Score_Type\nselected_schools &lt;- outliers %&gt;%\n  group_by(Score_Type) %&gt;%\n  arrange(desc(Score)) %&gt;%\n  slice_head(n = 2) %&gt;%\n  bind_rows(\n    outliers %&gt;%\n      group_by(Score_Type) %&gt;%\n      arrange(Score) %&gt;%\n      slice_head(n = 2)\n  )\n\n# Custom fill colors\ncustom_fill_colors &lt;- c(\"Math_Average\" = \"mistyrose3\", \n                        \"Reading_Average\" = \"paleturquoise3\", \n                        \"Science_Average\" = \"darkolivegreen3\",\n                        \"Average_score\" = \"#d8b1d4\")\n\n\n\n# Plot box plot with selected outlier labels\np3 &lt;- ggplot(Score_long, aes(x = Score_Type, y = Score, fill = Score_Type)) +\n  geom_violin(position = position_nudge(y = 0), side = \"r\", width = 0.6, color = NA, alpha = 0.5) + \n  geom_boxplot(notch=TRUE, width = 0.2, size = 0.3, outlier.color = \"grey10\", outlier.shape = 1) +\n  \n  scale_color_manual(values = custom_fill_colors) +  # Set color scale for Score_Type\n  scale_shape_manual(values = rep(16, length(unique(selected_schools$School_ID)))) +  # Set shape for each unique School_ID\n  \n  geom_text_repel(data = selected_schools, aes(label = School_ID, x = Score_Type, y = Score),\n                  box.padding = 0.8, point.padding = 0.5, max.iter = 500,\n                  size = 3, color = \"red\", nudge_x = 0.1) +\n  \n  geom_point(data = selected_schools, aes(x = Score_Type, y = Score), color = \"red\", size = 1) +  # Add geom_point\n  \n  geom_hline(yintercept = 550, linetype = \"dashed\", color = \"blue\", lwd = 0.5) +  # Add red dashed horizontal line\n  geom_text(aes(x = 1, y = 550, label = \"550\"), color = \"blue\", vjust = 1.5,hjust= 4.5, size = 3) +  # Add label at Y-axis value of 550\n  \n  labs(title = \"Score Distributions by Score Type\",\n       subtitle = \"(Red texts represent School ID;\\nThe red dot is the data point of the nearest School ID; Black circles are outliers. )\",\n       x = \"Score Type\",\n       y = \"Score\") +\n  scale_fill_manual(values = custom_fill_colors) +\n  scale_x_discrete(labels = c(\"Average_score\" = \"Total Average\", \"Math_Average\" = \"Math\", \"Reading_Average\" = \"Reading\", \"Science_Average\" = \"Science\")) +\n  \n  theme_clean() + \n  theme(legend.position = \"none\", \n        plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA),  \n        plot.title = element_text(hjust = 0.5, size = 20),  \n        plot.subtitle = element_text(hjust = 0.5, size = 10), \n        axis.title = element_text(size = 13, face = \"bold\"),\n        axis.title.y = element_text(size = 13, face = \"bold\", angle = 0.8, vjust = 0.5),\n        axis.text = element_text(size = 10),  \n        axis.text.y = element_text(size = 10),\n        legend.text = element_text(size = 10),  \n        legend.title = element_text(size = 10),\n        plot.margin = margin(10, 20, 10, 10))\nggsave(\"images/Redesign3.jpg\", width = 20, height = 25, units = \"cm\")\n\n\n\n\n\n\n\n\nOptimized Points:\n\nTitle and subtitle are centered, and both are bolded and enlarged.\nGroups are renamed as “Total Average,” “Math,” “Reading,” and “Science” to clarify the meaning of the Score Types for the reader.\nText labels are reduced, and both text labels and their corresponding points are filled in red. This enhances the directional connection between text labels and points.\nThe subtitle explains the meaning, color, and purpose of data points and text labels.\nA horizontal reference line at a score of 550 is added for easier comparison with the median.\nThe original box plot is transformed into a combination of a box plot and a violin plot.\nDifferent transparencies are applied to the box plot and the violin plot to facilitate reader observation.\n\nThe improved graph combines both the box plot and the violin plot, making it more convenient for readers to analyze from different perspectives. Readers can now observe which schools perform exceptionally well or poorly by comparing the text labels. The addition of horizontal reference lines facilitates the comparison of median scores across different Score Types. The number of peaks in the violin plot also allows readers to identify distinct groups of schools, with one group scoring between 500-600 (larger quantity) and another group scoring between 600-700 (smaller quantity)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-4",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#chart-4",
    "title": "Peer Critique & DataVis Makeover",
    "section": "3.4 Chart 4",
    "text": "3.4 Chart 4\n\nOriginal Design\n\n\n\nCritique\n\n\nClarity:\n\nGood Points:\n\nRed dashed lines are used to indicate the positions of the means, and a legend has been added to explain the colors corresponding to different groups.\n\nWeek Points:\n\nIt’s unclear what ISCED levels 2, 3, 4, and 5 represent.\nIt’s unclear whether the four density plots share the same X-axis scale.\n\n\nAesthetics:\n\nGood Points:\n\nDifferent groups have been distinguished by color, and the colors are gradient because the groups are related.\nThe mean lines are designed as red dashed lines.\n\nWeek Points:\n\nThe density plot has different Y-axis density scales.\nThe plot title is too long.\nThe subtitle is off-center to the left, affecting the symmetry of the graph.\nThe starting scale value on the X-axis is too large, causing some group density plots to be incomplete.\n\n\n\n\n\nRedesign\n\n\nShow the code: redesign sketch\n# Define the conversion rules\nstu_df &lt;- stu_df %&gt;%\n  mutate(Education_level = case_when(\n    Education_mother == 5 ~ \"Did not complete &lt;ISCED level 1&gt;\",\n    Education_mother == 4 ~ \"&lt;ISCED level 1&gt;\",\n    Education_mother == 3 ~ \"&lt;ISCED level 2&gt;\",\n    Education_mother == 2 ~ \"&lt;ISCED level 3.3&gt;\",\n    TRUE ~ as.character(Education_mother)  # Keep other values as is\n  ))\n\n# Calculate the cumulative distribution function (CDF) for Math_Average\ncdf_values &lt;- ecdf(stu_df$Math_Average)\n\n# Create a new variable for tail probability based on CDF\nstu_df &lt;- stu_df %&gt;%\n  mutate(Tail_Probability = 0.5 - abs(0.5 - cdf_values(Math_Average)))\n\np4 &lt;- ggplot(na.omit(stu_df), aes(x = Math_Average, y = Education_level, fill = 0.5 - abs(0.5 - stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE, bandwidth = 45) +\n  labs(title = \"Mother's Education Level vs. Math Score Distribution\",\n       x = \"Math Score\", \n       y = \"Education Level\",\n       fill = \"Density of Math Score\") +\n  theme_classic() +\n  theme(legend.position = \"right\", \n        plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA),  \n        plot.title = element_text(hjust = 0.5, size = 30, face = \"bold\"),  \n        plot.margin = margin(20,20,20,20),\n        axis.title = element_text(size = 15, face = \"bold\"),\n        axis.title.y = element_text(size = 15, face = \"bold\"),\n        axis.text = element_text(size = 15),  \n        axis.text.y = element_text(size = 15,margin = margin(t = 1, r = 0, b = 0, l = -10)),\n        legend.text = element_text(size = 15),  \n        legend.title = element_text(size = 15))\n\nggsave(\"images/Redesign4.jpg\", width = 30, height = 20, units = \"cm\")\n\n\n\n\nOptimized Points：\n\nThe plot title is centered, and both the title and axis titles are bold and enlarged.\nThe title has been renamed to make it straightforward and concise.\nGroups are now named according to ISCED level and are presented on the Y-axis, while the X-axis represents math scores.\nDensity curves are filled with gradient colors, where lighter colors indicate higher density. The color gradient rules are explained in the legend on the right side of the graph.\nThe red mean lines have been removed. Instead, comparisons between groups are made using gradient color and peak of the density plot, as the central light portion of the gradient color precisely represents the 50% position.\n\nThe improved graph clearly illustrates the density distribution of mathematics scores for different ISCED levels. By comparing the positions of the peaks in each graph or examining the location of the lightest color areas, readers can understand the differences in mathematics scores among children of mothers with different educational levels. For instance, in the graph, when the mother’s education level is ISCED level 3.3, their children tend to have higher mathematics scores compared to other levels. This is because the position of the lightest color area is furthest to the right, indicating that the higher 50% of the children are distributed in the higher score range. In contrast, the 50% score range for children in the other three levels is relatively lower."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "Tableau02: Make Dashboard & Story",
    "section": "",
    "text": "Exercise01: Make dashboards in Tableau\nIn-class_Ex03: Math vs English\nIn-class_Ex03: Superstore Sales and Profit Dashboard\n\n\n\nExercise02: Make story in Tableau\nIn-class_Ex03: Superstore Sales and Profit Story\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "Importing Data in R",
    "section": "Loading R packages",
    "text": "Loading R packages\nIn this hands-on exercise, two R packages will be used. They are: tidyverse, and haven.\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "Importing Data in R",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data (Student questionnaire data file) into environment.\n\nstu_qqq&lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nFilter the table using filter()\n\nstu_qqq_SG &lt;- stu_qqq %&gt;% filter(CNT == \"SGP\")\n\nWrite records into the data file.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\nRead data file.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html",
    "title": "Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. In this chapter, you will gain hands-on experience on creating statistical graphics for visualising uncertainty. By the end of this chapter you will be able:\n\nto plot statistics error bars by using ggplot2,\nto plot interactive error bars by combining ggplot2, plotly and DT,\nto create advanced by using ggdist, and\nto create hypothetical outcome plots (HOPs) by using ungeviz package."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html",
    "title": "Visualising Distribution: Ridgeline Plot & Raincloud Plot",
    "section": "",
    "text": "Visualising distribution is not new in statistical analysis. In chapter 1 we have shared with you some of the popular statistical graphics methods for visualising distribution are histogram, probability density curve (pdf), boxplot, notch plot and violin plot and how they can be created by using ggplot2. In this chapter, we are going to share with you two relatively new statistical graphic methods for visualising distribution, namely ridgeline plot and raincloud plot by using ggplot2 and its extensions."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#create-plot-by-geom_density_ridges",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#create-plot-by-geom_density_ridges",
    "title": "Visualising Distribution: Ridgeline Plot & Raincloud Plot",
    "section": "2.1 Create plot by geom_density_ridges()",
    "text": "2.1 Create plot by geom_density_ridges()\nrefer to this link for geom_density_ridges()\n\n\nShow the code: making ridgeline plot by geom_density_ridges()\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = \"Class\", expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#design-color-of-ridgeline-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#design-color-of-ridgeline-plot",
    "title": "Visualising Distribution: Ridgeline Plot & Raincloud Plot",
    "section": "2.2 Design color of ridgeline plot",
    "text": "2.2 Design color of ridgeline plot\n\n2.2.1 Fill gradients along the x axis\n\n\nShow the code: fill color by geom_density_ridges_gradient()\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"H\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = \"Class\", expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\nWarning: `stat(x)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(x)` instead.\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nDesign color by geom_density_ridges_gradient()or geom_ridgeline_gradient()\nFor example, in the code chunk above:\ngeom_density_ridges_gradient( scale = 3, rel_min_height = 0.01) +\nscale_fill_viridis_c(name = \"Temp. [F]\", option = \"H\")\n\n\n\n\n2.2.2 Mapping the probabilities directly onto color\n\n\nShow the code: fill color by stat_density_ridges()\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important include the argument calc_ecdf = TRUE in stat_density_ridges().\n\n\n\n\n2.2.3 Ridgeline plots with quantile lines\n\n\nShow the code: fill quantile lines(quantiles = 4)\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\nPicking joint bandwidth of 3.18\n\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot.\n\n\nShow the code: fill quantile lines(cut points)\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\nPicking joint bandwidth of 3.18"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#steps-for-creating-a-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#steps-for-creating-a-raincloud-plot",
    "title": "Visualising Distribution: Ridgeline Plot & Raincloud Plot",
    "section": "3.1 Steps for creating a raincloud plot",
    "text": "3.1 Steps for creating a raincloud plot\n\n3.1.1 Making half-eye plot\n\n\nShow the code: making half-eye plot by stat_halfeye()\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)+\n  theme_clean() +\n  theme(plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA))\n\n\n\n\n\n\n\n3.1.2 Adding the boxplot with geom_boxplot()\n\n\nShow the code: add boxplot next to half-eye plot\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)+\n  theme_clean() +\n  theme(plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA))\n\n\n\n\n\n\n\n3.1.3 Adding the Dot Plots with stat_dots()\n\n\nShow the code: add dot plots\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n  theme_clean() +\n  theme(plot.background = element_rect(fill = \"white\", color = NA),  \n        panel.background = element_rect(fill = \"white\", color = NA))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#design-the-raincload-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(1).html#design-the-raincload-plot",
    "title": "Visualising Distribution: Ridgeline Plot & Raincloud Plot",
    "section": "3.2 Design the raincload plot",
    "text": "3.2 Design the raincload plot\nFlip the raincloud chart and apply another theme to make the raincloud plot more beautiful.\n\n\nShow the code: filp the chart and apply theme\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(4).html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(4).html",
    "title": "Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Learning Outcome\nFunnel plot is a specially designed data visualisation for conducting unbiased comparison between outlets, stores or business entities. By the end of this hands-on exercise, you will gain hands-on experience on:\n\nplotting funnel plots by using funnelPlotR package,\nplotting static funnel plot by using ggplot2 package, and\nplotting interactive funnel plot by using both plotly R and ggplot2 packages.\n\n\n\n\nShow the code: Load R packages\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)\n\n\nIn this section, COVID-19_DKI_Jakarta will be used. The data was downloaded from Open Data Covid-19 Provinsi DKI Jakarta portal. For this hands-on exercise, we are going to compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan) as at 31st July 2021, DKI Jakarta.\nThe code chunk below imports the data into R and save it into a tibble data frame object called covid19.\n\n\nShow the code: Import data\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\n\nRows: 267 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): City, District, Sub-district\ndbl (4): Sub-district ID, Positive, Recovered, Death\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n1. FunnelPlotR\n\n\n\n\n\n\nFunnelPlotR package uses ggplot to generate funnel plots. It requires a numerator (events of interest), denominator (population to be considered) and group. The key arguments selected for customisation are:\n\nlimit: plot limits (95 or 99).\nlabel_outliers: to label outliers (true or false).\nPoisson_limits: to add Poisson limits to the plot.\nOD_adjust: to add overdispersed limits to the plot.\nxrange and yrange: to specify the range to display for axes, acts like a zoom function.\nOther aesthetic components such as graph title, axis labels etc.\n\n\n\n# Create basic funnel plot\n\nfunnel_plot(\n  numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`\n)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\n\n\n# Makeover1 funnel plot\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e.proportions).\nxrange and yrange are used to set the range of x-axis and y-axis\n\n\n\n\n# Makeover2 funnel plot\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.\n\n\n\n\n\n2. Funnel Plot for Fair Visual Comparison\nStep 1: Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\nStep 2: Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\nStep 3: Plotting a static funnel plot\n\n\nShow the code: Plotting a static funnel plot\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\nStep 4: Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly\n\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "Tableau01: Make a Chart",
    "section": "",
    "text": "Exercise: Make a chart in tableau\nTableau Practice of Lesson 2\n\n\n\n Back to top"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "",
    "text": "Show the code: load R packages\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse, haven)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#mean-of-plausible-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#mean-of-plausible-values",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "3.1 Mean of Plausible Values",
    "text": "3.1 Mean of Plausible Values\nCalculate the PV mean for each subject to obtain the representative score for each subject. Add the mean scores of the three subjects and take the average to derive the representative score for the overall knowledge performance.\nWe can get a glimpse of the calculation results from the following output:\n\n\nShow the code\nAvg_PVMath &lt;- rowMeans(stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")])\n\nAvg_PVRead &lt;- rowMeans(stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")])\n\nAvg_PVScience &lt;- rowMeans(stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")])\n\nPV_Avg &lt;- data.frame(\n  CNTSTUID = stu_qqq_SG$CNTSTUID,\n  Avg_PVMath = Avg_PVMath,\n  Avg_PVRead = Avg_PVRead,\n  Avg_PVScience = Avg_PVScience\n)\n\nPV_Avg$Avg_PVOverall &lt;- rowMeans(PV_Avg[, c(\"Avg_PVMath\", \"Avg_PVRead\", \"Avg_PVScience\")], na.rm = TRUE)\n\nwrite_rds(PV_Avg, \"data/stu_qqq_SG_PV_Avg.rds\")\n\nhead(PV_Avg)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience Avg_PVOverall\n1 70200001   605.2533   667.4296      639.7873      637.4901\n2 70200002   689.9528   627.6078      672.0703      663.2103\n3 70200003   676.7768   582.9252      660.0384      639.9135\n4 70200004   401.0528   361.3969      343.6425      368.6974\n5 70200005   436.1151   475.6763      479.2390      463.6768\n6 70200006   518.1055   431.4652      476.0031      475.1913\n\n\nEach student’s Avg_PVMath, Avg_PVRead, and Avg_PVScience values reflect their performance in math, reading, and science, respectively. Avg_PVOverall represents student’s overall knowledge performance. For example, the first row above shows the performance scores of math, reading and science for student “70200001” is 605.2533, 667.4296, 639.7873, respectively. The overall knowledge performance score of student “70200001” is 637.4901."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance-scores",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance-scores",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "3.2 Distribution of Performance Scores",
    "text": "3.2 Distribution of Performance Scores\n\n3.2.1 One Subject\nFirst, let’s see the frequency of the performance scores by subjects.\nHistogram\n\n\nShow the code\np1 &lt;- ggplot(data = PV_Avg, aes(x=Avg_PVMath)) +\n        geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n        geom_vline(aes(xintercept = mean(Avg_PVMath), linetype=\"Mean\", color=\"Mean\"), linewidth=0.5) +\n        geom_vline(aes(xintercept = median(Avg_PVMath), linetype=\"Median\", color=\"Median\"), linewidth=0.5) +\n        scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n        scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n        ggtitle(\"Frequency of Math Scores\") +\n        labs(color = \"Statistic\", x=\"Math Score\", size = 3) + \n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\n\np2 &lt;- ggplot(data = PV_Avg, aes(x=Avg_PVRead)) +\n        geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n        geom_vline(aes(xintercept = mean(Avg_PVRead), linetype=\"Mean\", color=\"Mean\"), linewidth=0.5) +\n        geom_vline(aes(xintercept = median(Avg_PVRead), linetype=\"Median\", color=\"Median\"), linewidth=0.5) +\n        scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n        scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n        ggtitle(\"Frequency of Reading Scores\") +\n        labs(color = \"Statistic\", x = \"Reading Score\", size = 3) + \n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\n\np3 &lt;- ggplot(data = PV_Avg, aes(x=Avg_PVScience)) +\n        geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n        geom_vline(aes(xintercept = mean(Avg_PVScience), linetype=\"Mean\", color=\"Mean\"), linewidth=0.5) +\n        geom_vline(aes(xintercept = median(Avg_PVScience), linetype=\"Median\", color=\"Median\"), linewidth=0.5) +\n        scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n        scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n        ggtitle(\"Frequency of Science Scores\") +\n        labs(color = \"Statistic\", x=\"Science Scores\", size = 3) + \n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\n\np4 &lt;- ggplot(data = PV_Avg, aes(x=Avg_PVOverall)) +\n        geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n        geom_vline(aes(xintercept = mean(Avg_PVOverall), linetype=\"Mean\", color=\"Mean\"), linewidth=0.5) +\n        geom_vline(aes(xintercept = median(Avg_PVOverall), linetype=\"Median\", color=\"Median\"), linewidth=0.5) +\n        scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n        scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n        ggtitle(\"Frequency of Overall Knowledge Performance Scores\") +\n        labs(color = \"Statistic\", x=\"Overall Knowledge Performance Scores\", size = 3) + \n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\np1+p2+p3+p4\n\n\n\n\n\nThe four histograms above all illustrate a left-skewed distribution, indicating that the scores are concentrated around higher values. Additionally, the dashed line in the graphs shows a mean score lower than the median. This could be attributed to some students with extremely low scores, pulling down the mean.\nBox plot\n\n\nShow the code\nPV_Avg_tidy &lt;- PV_Avg %&gt;%\n  pivot_longer(cols = c(Avg_PVMath, Avg_PVRead, Avg_PVScience, Avg_PVOverall), names_to = \"Subject\", values_to = \"Score\")\n\nmax_values &lt;- PV_Avg_tidy %&gt;% group_by(Subject) %&gt;% summarise(max_value = max(Score))\n\nggplot(PV_Avg_tidy, aes(x = Subject, y = Score)) +\n  geom_boxplot(fill = \"forestgreen\", color = \"white\") +\n  facet_grid(. ~ Subject, scales = \"free_x\") +\n  geom_hline(data = max_values, aes(yintercept = max_value, linetype = \"Max\"), color = \"yellow\", show.legend = FALSE, linewidth = 0.8) +\n  geom_text(data = max_values, aes(x = Subject, y = max_value, label = sprintf(\"Maximum: %.2f\", max_value)), size = 3, vjust = -0.5, hjust = 0.5, color = \"yellow\") +\n  geom_hline(aes(yintercept = median(Score), linetype = \"Median\"), color = \"red\",show.legend = FALSE, linewidth = 0.8) +\n  coord_cartesian(ylim = range(PV_Avg_tidy$Score)) +\n  ggtitle(\"Box Plots of Performance Scores\") + \n  theme_dark()\n\n\n\n\n\nThe four box plots reveal:\n\nSome students scored extremely low, especially in reading, followed by science and math.\nMedian scores follow the order: Math &gt; Science ≈ Overall &gt; Reading.\nMaximum scores follow the order: Math &gt; Science &gt; Reading &gt; Overall.\nOver 75% of students scored above 500 in math, and 75% of students scored above 500 in science, while less than 75% scored above 500 in reading. Nearly 75% of students scored above 500 in overall knowledge performance, with a few extremely low scorers below 300.\n\nNext, by using density curve, we can see more of the distribution and central tendency of the performance scores.\nDensity curve\n\n\nShow the code\n  peak_math &lt;- density(PV_Avg$Avg_PVMath)$x[which.max(density(PV_Avg$Avg_PVMath)$y)]\n  peak_read &lt;- density(PV_Avg$Avg_PVRead)$x[which.max(density(PV_Avg$Avg_PVRead)$y)]\n  peak_science &lt;- density(PV_Avg$Avg_PVScience)$x[which.max(density(PV_Avg$Avg_PVScience)$y)]\n  peak_overall &lt;- density(PV_Avg$Avg_PVOverall)$x[which.max(density(PV_Avg$Avg_PVOverall)$y)]\n  \nggplot(data = PV_Avg) +\n  geom_density(aes(x = Avg_PVMath, color = \"Math\"), fill = \"darkblue\", alpha = 0.5) +\n  geom_density(aes(x = Avg_PVRead, color = \"Reading\"), fill = \"darkgreen\", alpha = 0.5) +\n  geom_density(aes(x = Avg_PVScience, color = \"Science\"), fill = \"darkred\", alpha = 0.5) +\n  geom_density(aes(x = Avg_PVOverall, color = \"Overall\"), fill = \"orange\", alpha = 0.5) +\n  ggtitle(\"Density of Performance Scores\") +\n  labs(x = \"Average of PV\") +\n  geom_vline(aes(xintercept = peak_math, color = \"Math\"), linetype = \"dashed\", linewidth = 1) +\n  geom_vline(aes(xintercept = peak_read, color = \"Reading\"), linetype = \"dashed\", linewidth = 1) +\n  geom_vline(aes(xintercept = peak_science, color = \"Science\"), linetype = \"dashed\", linewidth = 1) +\n  geom_vline(aes(xintercept = peak_overall, color = \"Overall\"), linetype = \"dashed\", linewidth = 1) +\n  geom_text(aes(x = peak_math, y = 0, label = sprintf(\"Math: %.2f\", peak_math)), \n            vjust = - 0.5, hjust = 0.2, color = \"royalblue\", size = 3.5) +\n  geom_text(aes(x = peak_read, y = 0, label = sprintf(\"Reading: %.2f\", peak_read)), \n            vjust = - 3.5, hjust = 0.2, color = \"lightgreen\", size = 3.5) +\n  geom_text(aes(x = peak_science, y = 0, label = sprintf(\"Science: %.2f\", peak_science)),\n            vjust = - 8, hjust = 0.2, color = \"tomato\", size = 3.5) +\n  geom_text(aes(x = peak_overall, y = 0, label = sprintf(\"Overall: %.2f\", peak_overall)),\n            vjust = - 12, hjust = 0.5, color = \"yellow\", size = 3.5) +\n  scale_color_manual(values = c(\"Math\" = \"royalblue\", \"Reading\" = \"lightgreen\", \"Science\" = \"tomato\", \"Overall\" = \"yellow\"), name = \"Subject\") +\n  theme_classic() +\n  labs(x = \"Score\", y = \"Density\") +\n  theme(\n    legend.position = c(0.9, 0.8),\n    legend.text = element_text(size = 8),\n    legend.key.size = unit(5, \"mm\")\n  )\n\n\n\n\n\nThe four density curves above reveal:\n\nThe performance for all three subjects and overall show a tendency towards a leftward skew in their distributions.\nMath scores are centered around 600, science scores around 580, and reading scores around 560. Overall, students’ knowledge performance scores are centered around 590.\n\nLast, let’s present the distribution of performance scores by violin plots.\nViolin plot\n\n\nShow the code\nggplot(data = PV_Avg) +\n  geom_violin(aes(x = \"Math\", y = Avg_PVMath, fill = \"Math\"), position = \"dodge\") +\n  geom_violin(aes(x = \"Reading\", y = Avg_PVRead, fill = \"Reading\"), position = \"dodge\") +\n  geom_violin(aes(x = \"Science\", y = Avg_PVScience, fill = \"Science\"), position = \"dodge\") +\n  geom_violin(aes(x = \"Overall\", y = Avg_PVOverall, fill = \"Overall\"), position = \"dodge\") +\n  ggtitle(\"Violin Plot of Performance Scores\") +\n  labs(x = \"Subject\", y = \"Score\", fill = \"Subject\") +\n  theme_classic() \n\n\n\n\n\nThe similarity in the thickness of the violin plots above suggests that the scores for mathematics, reading, science, and overall performance share a certain degree of similarity in the central tendency and dispersion of their data distributions. However, the violin plot for reading exhibits a noticeably longer tail, indicating that the values for reading scores in the tail are relatively scattered, with the presence of more outliers. In contrast, the tails for the other two subjects as well as the overall scores are shorter, indicating a relatively concentrated distribution of data in the lower score range.\n\n\n3.2.2 Two Subjects\nNow, let’s see if there is any correlation between the scores in any two subjects.\n\n\nShow the code\np5 &lt;- ggplot(data = PV_Avg, \n             aes(x = Avg_PVMath, \n                 y = Avg_PVRead)) +\n        geom_point(color = \"royalblue\") +\n        geom_smooth(formula = y ~ x, method = lm, color = \"black\") +\n        geom_text(aes(x = max(Avg_PVMath), y = max(Avg_PVRead),\n                      label = paste(\"y = \", round(coef(lm(Avg_PVRead ~ Avg_PVMath))[2], 2), \"x + \", round(coef(lm(Avg_PVRead ~ Avg_PVMath))[1], 2))),\n                  hjust = 1.5, vjust = 1, color = \"black\", size = 4) +\n        ggtitle(\"Math vs Reading\") +\n        labs(x = \"Math Score\", y = \"Reading Score\", color = \"Math Score\") +\n        theme_classic()\np6 &lt;- ggplot(data = PV_Avg, \n             aes(x = Avg_PVMath, \n                 y = Avg_PVScience)) +\n        geom_point(color = \"forestgreen\") +\n        geom_smooth(formula = y ~ x, method = lm, color = \"black\") +\n        geom_text(aes(x = max(Avg_PVMath), y = max(Avg_PVScience),\n                      label = paste(\"y = \", round(coef(lm(Avg_PVScience ~ Avg_PVMath))[2], 2), \"x + \", round(coef(lm(Avg_PVScience ~ Avg_PVMath))[1], 2))),\n                  hjust = 1.5, vjust = 1, color = \"black\", size = 4) +\n        ggtitle(\"Math vs Science\") +\n        labs(x = \"Math Score\", y = \"Science Score\", color = \"Math Score\") +\n        theme_classic()\np7 &lt;- ggplot(data = PV_Avg, \n             aes(x = Avg_PVRead, \n                 y = Avg_PVScience)) +\n        geom_point(color = \"tomato\") +\n        geom_smooth(formula = y ~ x, method = lm, color = \"black\") +\n        geom_text(aes(x = max(Avg_PVRead), y = max(Avg_PVScience),\n                      label = paste(\"y = \", round(coef(lm(Avg_PVScience ~ Avg_PVRead))[2], 2), \"x + \", round(coef(lm(Avg_PVScience ~ Avg_PVRead))[1], 2))),\n                  hjust = 1.5, vjust = 1, color = \"black\", size = 4) +\n        ggtitle(\"Reading vs Science\") +\n        labs(x = \"Reading Score\", y = \"Science Score\", color = \"Reading Score\") +\n        theme_classic()\n\np5/p6|p7\n\n\n\n\n\nFrom the above three plots and their respective fit curves, it can be observed that the scores of the three subjects are positively correlated in pairs. As the scores in math increase, the scores in reading and science also increase, with science scores being higher. Similarly, when reading scores are higher, science scores also tend to be higher.\n\n\n3.2.3 Three Subjects\nNext, let’s see if there is any relationship among three subject’s scores.\n\nMath vs Reading with ScienceMath vs Science with ReadingReading vs Science with Math\n\n\n\n\nShow the code\nggplot(data = PV_Avg, \n       aes(x = Avg_PVMath, \n           y = Avg_PVRead, \n           color = Avg_PVScience)) +\n  geom_point() +\n  ggtitle(\"Math vs Reading with Science\") +\n  labs(x = \"Math Score\", y = \"Reading Score\", color = \"Science Score\") +\n  theme_clean()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg, \n       aes(x = Avg_PVMath, \n           y = Avg_PVScience, \n           color = Avg_PVRead)) +\n  geom_point() +\n  ggtitle(\"Math vs Science with Reading\") +\n  labs(x = \"Math Score\", y = \"Science Score\", color = \"Reading Score\") +\n  scale_color_continuous(\"Reading Score\", breaks = seq(200, 800, by = 100), \n                          low = \"darkgreen\", high = \"lightgreen\") +\n  theme_clean()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg, \n       aes(x = Avg_PVRead, \n           y = Avg_PVScience, \n           color = Avg_PVMath)) +\n  geom_point() +\n  ggtitle(\"Reading vs Science with Math\") +\n  labs(x = \"Reading Score\", y = \"Science Score\", color = \"Math Score\") +\n  scale_color_continuous(\"Math Score\", breaks = seq(200, 800, by = 100), \n                          low = \"red\", high = \"pink\") +\n  theme_clean()\n\n\n\n\n\n\n\n\nFrom the three colored scatter plots above, we can observe a positive trend: as the scores of any two subjects increase, the score of the third subject also tends to rise. This is visually represented by lighter colors and higher values towards the upper right corner. Conversely, when the scores of any two subjects decrease, the score of the third subject tends to decrease as well, reflected in darker colors and lower values towards the lower left corner. This pattern suggests a positive correlation among the performance scores of the three subjects, highlighting that higher scores in one subject are associated with higher scores in the others."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "3.3 Summary",
    "text": "3.3 Summary\nAfter analyzing the distribution of scores in different subjects, we can draw the following conclusions:\n\nSingaporean students excel in mathematics, followed by science, with reading being the subject where they perform least well.\nThere is a correlation between the scores in the three subjects; in general, students with higher scores tend to perform well across all three subjects, while students with lower scores tend to have lower scores in all three subjects."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "4.1 Gender",
    "text": "4.1 Gender\nLet’s incorporate the gender indicator into the analysis.\n\n\nShow the code\nPV_Avg_gender &lt;- cbind(PV_Avg, gender = stu_qqq_SG$ST004D01T)\nwrite_rds(PV_Avg_gender, \"data/stu_qqq_SG_PV_Avg_gender.rds\")\nhead(PV_Avg_gender)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience Avg_PVOverall gender\n1 70200001   605.2533   667.4296      639.7873      637.4901      1\n2 70200002   689.9528   627.6078      672.0703      663.2103      2\n3 70200003   676.7768   582.9252      660.0384      639.9135      2\n4 70200004   401.0528   361.3969      343.6425      368.6974      2\n5 70200005   436.1151   475.6763      479.2390      463.6768      1\n6 70200006   518.1055   431.4652      476.0031      475.1913      1\n\n\n\n\n\n\n\n\nNote\n\n\n\nIn the student questionnaire data set, the column “ST004D01T” records student’s gender, “1” represent female, “2” represent male. In the student questionnaire, the question “ST004Q01TA” represents student’s gender.\n\n\n\n4.1.1 Analyse\nlet’s see the frequency of performance scores in each subjects by gender.\n\n\nShow the code\np8 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVMath, \n                 fill = as.factor(gender))) +\n        geom_histogram(bins = 20, \n                       color = \"black\") +\n        scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                          breaks = c(\"1\", \"2\"), \n                          labels = c(\"Female\", \"Male\")) +\n        labs(fill = \"Gender\", x = \"Math Score\") +\n        ggtitle(\"Frequency of Math Scores by Gender\") +\n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\np9 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVRead, \n                 fill = as.factor(gender))) +\n        geom_histogram(bins = 20, \n                       color = \"black\") +\n        scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                          breaks = c(\"1\", \"2\"), \n                          labels = c(\"Female\", \"Male\")) +\n        labs(fill = \"Gender\", x = \"Reading Score\") +\n        ggtitle(\"Frequency of Reading Scores by Gender\") +\n        theme_classic() + \n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\np10 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVScience, \n                 fill = as.factor(gender))) +\n        geom_histogram(bins = 20, \n                       color = \"black\") +\n        scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                          breaks = c(\"1\", \"2\"), \n                          labels = c(\"Female\", \"Male\")) +\n        labs(fill = \"Gender\", x = \"Science Score\") +\n        ggtitle(\"Frequency of Science Scores by Gender\") +\n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\np11 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVOverall, \n                 fill = as.factor(gender))) +\n        geom_histogram(bins = 20, \n                       color = \"black\") +\n        scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                          breaks = c(\"1\", \"2\"), \n                          labels = c(\"Female\", \"Male\")) +\n        labs(fill = \"Gender\", x = \"Overall Score\") +\n        ggtitle(\"Frequency of Overall Scores by Gender\") +\n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8))  \n\np8+p9+p10+p11\n\n\n\n\n\nFrom the three histograms above:\n\nMale and female performances are fairly balanced in all three subjects and overall, with similar lengths of the bars across most score ranges, except for scores above 700.\nIn the high-score range (above 700), particularly near 800, by observing the lengths of the bars, it can be seen that there are more males excelling in math, science and overall, while females excel in reading.\n\nNext, let’s explore more by density curve.\n\n\nShow the code\np12 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVMath, \n                 color = as.factor(gender))) +\n        geom_density(alpha = 0, linewidth = 0.8) +\n        scale_color_manual(values = c(\"1\" = \"deeppink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n        labs(color = \"Gender\", x = \"Math Score\") +\n        ggtitle(\"Distribution of Math Scores by Gender\") +\n        theme_classic()+\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8)) \n\np13 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVRead, \n                 color = as.factor(gender))) +\n        geom_density(alpha = 0, linewidth = 0.8) +\n        scale_color_manual(values = c(\"1\" = \"deeppink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n        labs(color = \"Gender\", x = \"Reading Score\") +\n        ggtitle(\"Distribution of Reading Scores by Gender\") +\n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8)) \n          \np14 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVScience, \n                 color = as.factor(gender))) +\n        geom_density(alpha = 0, linewidth = 0.8) +\n        scale_color_manual(values = c(\"1\" = \"deeppink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n        labs(color = \"Gender\", x = \"Science Score\") +\n        ggtitle(\"Distribution of Science Scores by Gender\") +\n        theme_classic() +\n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8)) \n          \np15 &lt;- ggplot(data = PV_Avg_gender, \n             aes(x = Avg_PVOverall, \n                 color = as.factor(gender))) +\n        geom_density(alpha = 0, linewidth = 0.8) +\n        scale_color_manual(values = c(\"1\" = \"deeppink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n        labs(color = \"Gender\", x = \"Overall Score\") +\n        ggtitle(\"Distribution of Overall Scores by Gender\") +\n        theme_classic() +       \n          theme(\n            plot.title = element_text(size = 8),\n            axis.title = element_text(size = 8),  \n            legend.text = element_text(size = 8),  \n            legend.title = element_text(size = 8)) \n          \np12+p13+p14+p15   \n\n\n\n\n\nFrom the above four density curves, we can get the following observation:\n\nBoth male and female students exhibit a left-skewed trend in their performance scores across the three subjects and overall.\nIn terms of math performance, female scores being concentrated around 600, while male scores are concentrated around 650 suggests that, on average, males tend to achieve slightly higher scores in math compared to females.\nRegarding reading performance, the concentration of both male and female scores around 550-600, approximately at 580, suggests that there is a similarity in the average performance of both genders in Reading. However, the observed differences in the lower and higher score ranges indicate certain gender-related patterns. The larger area under the curve below 500 for males implies that more male students fall into the lower score range (&lt;500). Conversely, the larger area above 600 for females suggests that more female students achieve scores in the higher range (&gt;600).\nIn science performance, the concentration of female scores below 600 (around 580), and male scores above 600 (around 610), indicates that, on average, the majority of male students outperform the majority of female students in Science. The larger area under the curve above 600 for males in the higher score range further supports this observation, suggesting that more male students achieve scores in the upper range (&gt;600) compared to females.\nIn math, science, and overall performance, the distribution of male scores is more left-skewed compared to the distribution of female scores. This indicates that, in these subjects, male scores are relatively concentrated at higher levels. A left-skewed distribution suggests that the majority of students achieve higher scores, with relatively fewer lower scores. This implies that, overall, male students tend to perform more prominently in the higher score ranges in math, science, and overall performance.\n\nThe following set of violin plots offers a clearer comparison:\n\n\nShow the code\np16 &lt;- ggplot(data = PV_Avg_gender, \n              aes(x = as.factor(gender), y = Avg_PVMath, fill = as.factor(gender))) +\n         geom_violin(trim = FALSE) +\n         geom_boxplot(width = 0.1, fill = \"white\", color = \"black\") +\n         scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n         labs(fill = \"Gender\", x = NULL, y = \"Math Score\") +\n         ggtitle(\"Distribution of Math Scores by Gender\") +\n         theme_classic() +\n         theme(\n           plot.title = element_text(size = 8),\n           axis.title = element_text(size = 8),  \n           legend.text = element_text(size = 8),  \n           legend.title = element_text(size = 8)) \n\np17 &lt;- ggplot(data = PV_Avg_gender, \n              aes(x = as.factor(gender), y = Avg_PVRead, fill = as.factor(gender))) +\n         geom_violin(trim = FALSE) +\n         geom_boxplot(width = 0.1, fill = \"white\", color = \"black\") +\n         scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n         labs(fill = \"Gender\", x = NULL, y = \"Reading Score\") +\n         ggtitle(\"Distribution of Reading Scores by Gender\") +\n         theme_classic() +\n         theme(\n           plot.title = element_text(size = 8),\n           axis.title = element_text(size = 8),  \n           legend.text = element_text(size = 8),  \n           legend.title = element_text(size = 8)) \n\np18 &lt;- ggplot(data = PV_Avg_gender, \n              aes(x = as.factor(gender), y = Avg_PVScience, fill = as.factor(gender))) +\n         geom_violin(trim = FALSE) +\n         geom_boxplot(width = 0.1, fill = \"white\", color = \"black\") +\n         scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n         labs(fill = \"Gender\", x = NULL, y = \"Science Score\") +\n         ggtitle(\"Distribution of Science Scores by Gender\") +\n         theme_classic() +\n         theme(\n           plot.title = element_text(size = 8),\n           axis.title = element_text(size = 8),  \n           legend.text = element_text(size = 8),  \n           legend.title = element_text(size = 8)) \n\n\n\np19 &lt;- ggplot(data = PV_Avg_gender, \n              aes(x = as.factor(gender), y = Avg_PVOverall, fill = as.factor(gender))) +\n         geom_violin(trim = FALSE) +\n         geom_boxplot(width = 0.1, fill = \"white\", color = \"black\") +\n         scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"dodgerblue\"), \n                           breaks = c(\"1\", \"2\"), \n                           labels = c(\"Female\", \"Male\")) +\n         labs(fill = \"Gender\", x = NULL, y = \"Overall Score\") +\n         ggtitle(\"Distribution of Overall Scores by Gender\") +\n         theme_classic() +       \n         theme(\n           plot.title = element_text(size = 8),\n           axis.title = element_text(size = 8),  \n           legend.text = element_text(size = 8),  \n           legend.title = element_text(size = 8)) \n\n\n\n\np16 + p17 + p18 + p19\n\n\n\n\n\nThe violin plots for male students in math, science, and overall performance exhibit characteristics of narrower and more concentrated distributions, especially with higher scores corresponding to the widest part. This suggests that male students’ scores in these subjects are more consistent and concentrated, with a substantial portion achieving higher scores. The narrowness of the plots indicates relatively small variability in scores among male students, signifying a more uniform performance. In the widest part of the violin plot, it demonstrates that a considerable number of males perform well within this score range, further emphasizing the trend of males exhibiting concentrated and superior performance in mathematics, science, and overall academic achievement.\nIn contrast, concerning reading, the violin plots for both male and female students are generally similar, but the female plot has higher scores corresponding to the widest part. This implies that female students generally demonstrate a more balanced performance in reading, with a relatively larger proportion of females achieving higher scores. While both plots share similar overall trends, females may have a higher average score and more instances of high performance in reading. This difference reflects the relative advantage of females in reading, showcasing a more outstanding reading ability or higher academic proficiency.\n\n\n4.1.2 Summary\nBased on the above analysis, we can draw the conclusion that in math, science, and overall performance, males outperform females, with a greater number achieving higher scores. In reading, the performance difference between males and females is not significant, but there tends to be a higher number of females in the high-scoring range."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "4.2 School",
    "text": "4.2 School\nNext, incorporating “School ID” into the analysis.\n\n\n\n\n\n\nNote\n\n\n\nIn the student questionnaire data set, the column “CNTSCHID” represents School ID.\n\n\n\n\nShow the code\nPV_Avg_school &lt;- cbind(PV_Avg, School_ID = stu_qqq_SG$CNTSCHID)\nwrite_rds(PV_Avg_school, \"data/stu_qqq_SG_PV_Avg_school.rds\")\nhead(PV_Avg_school)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience Avg_PVOverall School_ID\n1 70200001   605.2533   667.4296      639.7873      637.4901  70200052\n2 70200002   689.9528   627.6078      672.0703      663.2103  70200134\n3 70200003   676.7768   582.9252      660.0384      639.9135  70200112\n4 70200004   401.0528   361.3969      343.6425      368.6974  70200004\n5 70200005   436.1151   475.6763      479.2390      463.6768  70200152\n6 70200006   518.1055   431.4652      476.0031      475.1913  70200043\n\n\nThis report will sum up and average the scores of survey participants from the same school to represent the school’s performance score.\n\n\nShow the code\nschool_counts &lt;- PV_Avg_school %&gt;%\n  group_by(School_ID) %&gt;%\n  summarise(STUCount = n_distinct(CNTSTUID))\ndimensions &lt;- dim(school_counts)\ncat(\"The total number of Singaporean schools surveyed in the questionnaire is\", dimensions[1])\n\n\nThe total number of Singaporean schools surveyed in the questionnaire is 164\n\n\nThe code chunk below calculates the mean scores for math, reading, and science, as well as overall performance, for all surveyed students in each school. This process provides representative scores for three subjects and overall performance for each school.\n\n\nShow the code\nPV_Avg_school_group &lt;- PV_Avg_school %&gt;%\n  group_by(School_ID) %&gt;%\n  summarise(\n    Math_Score = mean(Avg_PVMath),\n    Read_Score = mean(Avg_PVRead),\n    Science_Score = mean(Avg_PVScience),\n    Overall_Score = mean(Avg_PVOverall)\n  )\nwrite_rds(PV_Avg_school_group, \"data/stu_qqq_SG_PV_Avg_school_group.rds\")\nhead(PV_Avg_school_group)\n\n\n# A tibble: 6 × 5\n  School_ID Math_Score Read_Score Science_Score Overall_Score\n      &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;\n1  70200001       725.       653.          698.          692.\n2  70200002       535.       507.          534.          525.\n3  70200003       740.       665.          714.          706.\n4  70200004       510.       480.          494.          495.\n5  70200005       547.       516.          529.          531.\n6  70200006       487.       468.          477.          477.\n\n\n\n4.2.1 Analyse\nThe following violin plots with accompanying boxes illustrate the distribution of scores in math, reading, science, and overall performance across different schools:\n\n\nShow the code\n# Pivot the data to a longer format\nScore_long &lt;- PV_Avg_school_group %&gt;%\n  pivot_longer(\n    cols = c(\"Math_Score\", \"Read_Score\", \"Science_Score\", \"Overall_Score\"),\n    names_to = \"Score_Type\",\n    values_to = \"Score\"\n  )\n\n# Calculate outliers using the IQR method\noutliers &lt;- Score_long %&gt;%\n  group_by(Score_Type) %&gt;%\n  summarize(\n    lower_limit = quantile(Score, 0.25) - 1.5 * IQR(Score),\n    upper_limit = quantile(Score, 0.75) + 1.5 * IQR(Score)\n  ) %&gt;%\n  left_join(Score_long, by = \"Score_Type\") %&gt;%\n  filter(Score &lt; lower_limit | Score &gt; upper_limit)\n\n# Identify the top 3 and bottom 2 schools for each Score_Type\nselected_schools &lt;- outliers %&gt;%\n  group_by(Score_Type) %&gt;%\n  arrange(desc(Score)) %&gt;%\n  slice_head(n = 3) %&gt;%\n  bind_rows(\n    outliers %&gt;%\n      group_by(Score_Type) %&gt;%\n      arrange(Score) %&gt;%\n      slice_head(n = 2)\n  )\n\n# Custom fill colors\ncustom_fill_colors &lt;- c(\"Math_Score\" = \"#A0E57C\", \n                        \"Read_Score\" = \"#8ABDFF\", \n                        \"Science_Score\" = \"#FFE57F\",\n                        \"Overall_Score\" = \"#FFB7C9\")\n\n# Plot violin plot with selected outlier labels\nggplot(Score_long, aes(x = Score_Type, y = Score, fill = Score_Type)) +\n  geom_violin(trim = FALSE, width = 0.7) + \n  geom_boxplot(width = 0.1, fill = \"white\", color = \"black\") +  # Add boxplot for clarity\n  geom_text_repel(data = selected_schools, aes(label = School_ID), \n                  box.padding = 0.8, point.padding = 0.5, max.iter = 500, size = 3, color = \"black\") +\n  scale_fill_manual(values = custom_fill_colors) +\n  labs(title = \"Distribution of Scores by School\",\n       x = \"Score Type\",\n       y = \"Score\",\n       fill = \"Score Type\") +\n  theme_classic()\n\n\n\n\n\nFrom plots above, we can get the following observation:\n\nThe violin plots for mathematics, reading, science, and overall performance exhibit bi-modal distributions, with a major peak concentrated in the 500-600 range and a minor peak in the 600-700 range. This suggests the presence of two distinct school groups with significantly different performance levels in these subjects and overall, with the larger group having lower performance.\nIn the box plots, the median line within the box for mathematics scores is the highest, indicating a higher median score. This implies that the median performance of students in mathematics is relatively better in Singaporean schools. The median line for science scores is the second-highest, suggesting a relatively higher median performance in science, though not surpassing mathematics. The lowest median line is observed in the box for reading scores, indicating a relatively lower median performance in reading. Overall, it can be inferred that students in Singaporean schools perform better in mathematics compared to science, and science performance is better than reading.\nThree schools, namely “70200001,” “702001010,” and “70200003,” exhibit consistently high scores across subjects and overall performance. On the other hand, two schools, “70200115” and “70200149,” consistently display low scores across all subjects and overall performance.\n\n\n\n4.2.2 Summary\nBased on the previous analysis, we can observe that Singaporean schools can be divided into a group of high-performing schools and a group of low-performing schools. The number of high-performing schools is lower than the number of low-performing schools. Singaporean schools demonstrate a higher level of education in math compared to science and outperform reading. Three prestigious schools in Singapore exhibit outstanding performance."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#socioeconomic-status",
    "title": "Analysis of Singaporean Students’ Performance",
    "section": "4.3 Socioeconomic Status",
    "text": "4.3 Socioeconomic Status\nIn this section, the report will sequentially select “Parent’s Highest Education Level” and “Home Possessions” to represent the analysis of the impact of socioeconomic status on student performance through an examination of their influence on student performance.\n\n4.3.1 Parent’s Highest Education Level\nIn the questionnaire, the educational level of parents is recorded using the ISCED level. This report categorizes the ISCED levels of students’ parents into the following groups: ISCED Level &lt;4, ISCED Level 4, ISCED Level 5, ISCED Level 6, ISCED Level 7, ISCED Level 8. The chart below illustrates the educational levels corresponding to different ISCED levels.\n\n\n\n\n\nComparing the ISCED levels of parents and incorporating the highest level into the analysis, the following code block implements this process:\n\n\nShow the code\n# Mom's edu level\nMomEdu &lt;- cbind(stu_qqq_SG[, c(\"CNTSTUID\", \"ST006Q01JA\", \"ST006Q02JA\", \"ST006Q03JA\", \"ST006Q04JA\", \"ST006Q05JA\")])\n\nget_highest_level &lt;- function(row) {\n  level_column &lt;- grep(\"^ST006Q\", names(row))\n  if (any(!is.na(row[level_column]) & row[level_column] == 1)) {\n    max_level_index &lt;- which.max(row[level_column] == 1)\n    return(9 - max_level_index)\n  } else {\n    return(\"&lt;4\")\n  }\n}\nMomEdu$Mom_Level &lt;- apply(MomEdu, 1, get_highest_level)\n\n# Dad's edu level\nDadEdu &lt;- cbind(stu_qqq_SG[, c(\"CNTSTUID\", \"ST008Q01JA\", \"ST008Q02JA\", \"ST008Q03JA\", \"ST008Q04JA\", \"ST008Q05JA\")])\n\nget_highest_level &lt;- function(row) {\n  level_column &lt;- grep(\"^ST008Q\", names(row))\n  if (any(!is.na(row[level_column]) & row[level_column] == 1)) {\n    max_level_index &lt;- which.max(row[level_column] == 1)\n    return(9 - max_level_index)\n  } else {\n    return(\"&lt;4\")\n  }\n}\nDadEdu$Dad_Level &lt;- apply(DadEdu, 1, get_highest_level)\n\n#Get the highest edu level\nParent_edu_level &lt;- bind_cols(select(MomEdu, CNTSTUID, Mom_Level), select(DadEdu, Dad_Level)) %&gt;%\n  mutate(Parent_highest_level = pmax(Mom_Level, Dad_Level, na.rm = TRUE))\nwrite_rds(Parent_edu_level, \"data/stu_qqq_SG_Parent_edu_level.rds\")\n\nPV_Avg_Parent_edu_highestlevel &lt;- cbind(PV_Avg, Parent_highest_level = Parent_edu_level$Parent_highest_level)\nwrite_rds(PV_Avg_Parent_edu_highestlevel, \"data/stu_qqq_SG_PV_Avg_Parent_edu_highestlevel.rds\")\n\nhead(PV_Avg_Parent_edu_highestlevel)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience Avg_PVOverall\n1 70200001   605.2533   667.4296      639.7873      637.4901\n2 70200002   689.9528   627.6078      672.0703      663.2103\n3 70200003   676.7768   582.9252      660.0384      639.9135\n4 70200004   401.0528   361.3969      343.6425      368.6974\n5 70200005   436.1151   475.6763      479.2390      463.6768\n6 70200006   518.1055   431.4652      476.0031      475.1913\n  Parent_highest_level\n1                    6\n2                    5\n3                   &lt;4\n4                    4\n5                    5\n6                    7\n\n\nLet’s see the distribution of scores by ISCED level:\n\nISCED vs MathISCED vs ReadingISCED vs ScienceISCED vs Overall\n\n\n\n\nShow the code\nggplot(data=PV_Avg_Parent_edu_highestlevel, aes(x = Avg_PVMath, fill = Parent_highest_level)) +\n  geom_density(alpha = 1, color = NA) +\n  facet_grid(Parent_highest_level ~ ., scales = \"free_y\", switch = \"y\") +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(x = \"Math Score\", fill = \"&lt;ISCED&gt; Level\") +\n  ggtitle(\"Distribution of Math Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=PV_Avg_Parent_edu_highestlevel, aes(x = Avg_PVRead, fill = Parent_highest_level)) +\n  geom_density(alpha = 1, color = NA) +\n  facet_grid(Parent_highest_level ~ ., scales = \"free_y\", switch = \"y\") +\n  scale_fill_brewer(palette = \"Greens\") +\n  labs(x=\"Reading Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Distribution of Reading Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=PV_Avg_Parent_edu_highestlevel, aes(x = Avg_PVScience, fill = Parent_highest_level)) +\n  geom_density(alpha = 1, color = NA) +\n  facet_grid(Parent_highest_level ~ ., scales = \"free_y\", switch = \"y\") +\n  scale_fill_brewer(palette = \"Reds\") +\n  labs(x=\"Science Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Distribution of Science Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=PV_Avg_Parent_edu_highestlevel, aes(x = Avg_PVOverall, fill = Parent_highest_level)) +\n  geom_density(alpha = 1, color = NA) +\n  facet_grid(Parent_highest_level ~ ., scales = \"free_y\", switch = \"y\") +\n  scale_fill_brewer(palette = \"Purples\") +\n  labs(x=\"Overall Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Distribution of Overall Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\nFrom the above plots, we can observe that：\nThrough the observation of central tendencies, students exhibit the highest performance when their parents have an ISCED level of 6 (bachelor’s) and 7 (master’s), spanning across various subjects as well as overall scores. Surprisingly, when parents have an ISCED level of 8 (doctoral), students’ performance in individual subjects and overall is only at a moderate level, resembling the score distribution of students with an ISCED level of 5 (certificate, diploma, and associate degree). Students with parents having an ISCED level of 4 or below demonstrate poorer performance.\nObserving the following violin plots:\n\nISCED vs MathISCED vs ReadingISCED vs ScienceISCED vs Overall\n\n\n\n\nShow the code\nggplot(data = PV_Avg_Parent_edu_highestlevel, aes(x = Parent_highest_level, y = Avg_PVMath, fill = Parent_highest_level)) +\n  geom_violin() +\n  geom_boxplot(width = 0.3, fill = \"white\", color = \"black\", alpha = 1) +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(x = \"Parent's highest &lt;ISCED&gt; level\", y = \"Math Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Violin Plots with Boxplots of Math Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_Parent_edu_highestlevel, aes(x = Parent_highest_level, y = Avg_PVRead, fill = Parent_highest_level)) +\n  geom_violin() +\n  geom_boxplot(width = 0.3, fill = \"white\", color = \"black\", alpha = 1) +\n  scale_fill_brewer(palette = \"Greens\") +\n  labs(x = \"Parent's highest &lt;ISCED&gt; level\", y = \"Math Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Violin Plots with Boxplots of Reading Score by Parent's Highest Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_Parent_edu_highestlevel, aes(x = Parent_highest_level, y = Avg_PVScience, fill = Parent_highest_level)) +\n  geom_violin() +\n  geom_boxplot(width = 0.3, fill = \"white\", color = \"black\", alpha = 1) +\n  scale_fill_brewer(palette = \"Reds\") +\n  labs(x = \"Parent's highest &lt;ISCED&gt; level\", y = \"Science Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Violin Plots with Boxplots of Science Score by Parent's Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_Parent_edu_highestlevel, aes(x = Parent_highest_level, y = Avg_PVOverall, fill = Parent_highest_level)) +\n  geom_violin() +\n  geom_boxplot(width = 0.3, fill = \"white\", color = \"black\", alpha = 1) +\n  scale_fill_brewer(palette = \"Purples\") +\n  labs(x = \"Parent's highest &lt;ISCED&gt; level\", y = \"Overall Score\", fill = \"&lt;ISCED&gt; level\") +\n  ggtitle(\"Violin Plots with Boxplots of Overall Score by Parent's Education Level\") +\n  theme_clean() +\n  theme(\n    plot.title = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\nWe can observe the following from the above plots:\n\nSome violin plots are uni-modal, while others exhibit bi-modal shapes. Bi-modal violin plots suggest that students of parents with the same ISCED level have scores distributed into different groups, with some achieving higher scores and others scoring lower.\nViolin plots for students whose parents have an ISCED level of 8 (doctoral) are elongated in all three subjects and overall. This may indicate a wider distribution of scores across subjects, suggesting greater variability. This situation suggests that students with parents holding a doctoral degree show significant variations in performance, with some achieving high scores and others performing poorly. Compared to students with parents at other ISCED level, this reflects uncertainty and diversity in performance within doctoral family backgrounds.\nViolin plots for students whose parents have an ISCED level of 6 (bachelor’s) and 7 (master’s) are short and stout in all three subjects and overall. This suggests that these students have a relatively concentrated distribution of scores, indicating lower variability. This situation implies that most students with parents holding bachelor’s and master’s degrees exhibit a relatively consistent level of academic performance, with fewer extremes of high or low scores. Compared to students with parents at other ISCED level, these students from bachelor’s and master’s backgrounds demonstrate a more stable and consistent performance.\n\n\n\n4.3.2 Home Possessions\nIn this section, the report will sum up some data in the student questionnaire data set that reflects aspects of home processions (HOMEPOS). The sum of this data will be used to represent the HOMEPOS. Subsequently, an analysis will be conducted to examine the impact of HOMEPOS on student performance.\nBy the following code block, the calculation of HOMOPOS can be carried out:\n\n\nShow the code\nHOMEPOS &lt;- stu_qqq_SG %&gt;%\n  mutate(HOMEPOS_Number = coalesce(ST251Q01JA, 0) +\n                              coalesce(ST251Q02JA, 0) +\n                              coalesce(ST251Q03JA, 0) +\n                              coalesce(ST251Q04JA, 0) +\n                              coalesce(ST251Q06JA, 0) +\n                              coalesce(ST251Q07JA, 0) +\n                              coalesce(ST253Q01JA, 0) +\n                              coalesce(ST255Q01JA, 0))\nPV_Avg_HOMEPOS &lt;- cbind(PV_Avg, Home_Possessions = HOMEPOS$HOMEPOS_Number)\nwrite_rds(PV_Avg_HOMEPOS, \"data/stu_qqq_SG_PV_Avg_HOMEPOS.rds\")\nhead(PV_Avg_HOMEPOS)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience Avg_PVOverall Home_Possessions\n1 70200001   605.2533   667.4296      639.7873      637.4901               29\n2 70200002   689.9528   627.6078      672.0703      663.2103               29\n3 70200003   676.7768   582.9252      660.0384      639.9135               23\n4 70200004   401.0528   361.3969      343.6425      368.6974               21\n5 70200005   436.1151   475.6763      479.2390      463.6768               22\n6 70200006   518.1055   431.4652      476.0031      475.1913               20\n\n\nNesxt, let’s see how HOMOPOS influence students’ performance.\n\nHOMEPOS vs MathHOMEPOS vs ReadingHOMEPOS vs ScienceHOMEPOS vs Overall\n\n\n\n\nShow the code\nggplot(data = PV_Avg_HOMEPOS, aes(x = factor(Home_Possessions), y = Avg_PVMath)) +\n  geom_boxplot(width = 0.5, fill = \"lightblue\") +\n  stat_summary(fun = \"median\", geom = \"line\", aes(group = 1), color = \"red\", linewidth = 1) +  \n  labs(x = \"HOMEPOS\", y = \"Math Score\", title = \"Distribution of Math Scores by HOMEPOS\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_HOMEPOS, aes(x = factor(Home_Possessions), y = Avg_PVRead)) +\n  geom_boxplot(width = 0.5, fill = \"lightgreen\") +\n  stat_summary(fun = \"median\", geom = \"line\", aes(group = 1), color = \"red\", linewidth = 1) +  \n  labs(x = \"HOMEPOS\", y = \"Reading Score\", title = \"Distribution of Reading Scores by HOMEPOS\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_HOMEPOS, aes(x = factor(Home_Possessions), y = Avg_PVScience)) +\n  geom_boxplot(width = 0.5, fill = \"pink\") +\n  stat_summary(fun = \"median\", geom = \"line\", aes(group = 1), color = \"red\", linewidth = 1) +  \n  labs(x = \"HOMEPOS\", y = \"Science Score\", title = \"Distribution of Science Scores by HOMEPOS\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data = PV_Avg_HOMEPOS, aes(x = factor(Home_Possessions), y = Avg_PVOverall)) +\n  geom_boxplot(width = 0.5, fill = \"#D2B4E8\") +\n  stat_summary(fun = \"median\", geom = \"line\", aes(group = 1), color = \"red\", linewidth = 1) +  \n  labs(x = \"HOMEPOS\", y = \"Overall Score\", title = \"Distribution of Overall Scores by HOMEPOS\") +\n  theme_classic()\n\n\n\n\n\n\n\n\nBased on the observed trends from the above plots, we can see that:\nAs the HOMEPOS values increase, there is an upward trend in students’ scores. However, after reaching a certain point, there seems to be a decline. Specifically, when HOMEPOS values exceed 35, the performance in three subjects and overall appears to decrease. This suggests that an increase in HOMEPOS contributes positively to student performance up to a certain point, but when the HOMEPOS values become excessively high, student performance may start to decline."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#build-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(2).html#build-models",
    "title": "Visual Statistical Analysis: add statistical information in chart",
    "section": "3.2 Build models",
    "text": "3.2 Build models\n\n\nShow the code: Multiple Regression Model\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\n\nShow the code: Model Diagnostic: checking for multicolinearity\ncheck_collinearity(model)\n\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\n\nShow the code: Model Diagnostic: checking for multicolinearity\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)\n\n\nVariable `Component` is not in your data frame :/\n\n\n\n\n\n\n\nShow the code: Model Diagnostic: checking normality assumption\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\ncheck_n &lt;- check_normality(model1)\nplot(check_n)\n\n\nFor confidence bands, please install `qqplotr`.\n\n\n\n\n\n\n\nShow the code: Model Diagnostic: Check model for homogeneity of variances\ncheck_h &lt;- check_heteroscedasticity(model1)\nplot(check_h)\n\n\n\n\n\n\n\nShow the code: Model Diagnostic: Complete check\ncheck_model(model1)\nggsave(\"images/ModelDiagnosticCompleteCheck.jpg\", width = 30, height = 30, units = \"cm\")\n\n\n\n\n\n\n\n\n\nShow the code: Visualising Regression Parameters: see methods\nplot(parameters(model1))\n\n\n\n\n\n\n\nShow the code: Visualising Regression Parameters: ggcoefstats()\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yaling's VAA journey",
    "section": "",
    "text": "Welcome to Yaling’s Visual Analysis Wonderland !"
  },
  {
    "objectID": "index.html#hands-on-exercise",
    "href": "index.html#hands-on-exercise",
    "title": "Yaling's VAA journey",
    "section": "Hands-on Exercise",
    "text": "Hands-on Exercise\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nVisualising Uncertainty\n\n\n12 min\n\n\n\nJan 31, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Distribution: Ridgeline Plot & Raincloud Plot\n\n\n8 min\n\n\n\nJan 30, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nVisual Statistical Analysis: add statistical information in chart\n\n\n4 min\n\n\n\nJan 30, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#in-class-exercise",
    "href": "index.html#in-class-exercise",
    "title": "Yaling's VAA journey",
    "section": "In-class Exercise",
    "text": "In-class Exercise\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nTableau02: Make Dashboard & Story\n\n\n1 min\n\n\n\nJan 27, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nTableau01: Make a Chart\n\n\n1 min\n\n\n\nJan 20, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nImporting Data in R\n\n\n1 min\n\n\n\nJan 13, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#take-home-exercise",
    "href": "index.html#take-home-exercise",
    "title": "Yaling's VAA journey",
    "section": "Take-home Exercise",
    "text": "Take-home Exercise\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\nPeer Critique & DataVis Makeover\n\n\n24 min\n\n\n\nJan 26, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of Singaporean Students’ Performance\n\n\n55 min\n\n\n\nJan 21, 2024\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#plotting-standard-error-bars-of-point-estimates",
    "title": "Visualising Uncertainty",
    "section": "2.1 Plotting standard error bars of point estimates",
    "text": "2.1 Plotting standard error bars of point estimates\nNow we are ready to plot the standard error bars of mean maths score by race as shown below.\n\n\nShow the code: Plotting standard error bars of point estimates\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#plotting-confidence-interval-of-point-estimates",
    "title": "Visualising Uncertainty",
    "section": "2.2 Plotting confidence interval of point estimates",
    "text": "2.2 Plotting confidence interval of point estimates\nInstead of plotting the standard error bar of point estimates, we can also plot the confidence intervals of mean maths score by race.\n\n\nShow the code: Plotting confidence interval of point estimates\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04(3).html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Visualising Uncertainty",
    "section": "2.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "2.3 Visualizing the uncertainty of point estimates with interactive error bars\nIn this section, you will learn how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\n\nShow the code: Visualizing the uncertainty of point estimates with interactive error bars\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\nWarning in geom_point(aes(x = RACE, y = mean, text = paste(\"Race:\", RACE, :\nIgnoring unknown aesthetics: text"
  }
]
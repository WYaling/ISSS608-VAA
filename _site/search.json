[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "",
    "text": "The data set under analysis is derived from PISA data (Student questionnaire data file). The original data set is a SAS data set, and it needs to be read using read.sas().\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse, haven) \n\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\ndimensions &lt;- dim(stu_qqq)\ncat(\"Rows:\", dimensions[1], \" Columns:\", dimensions[2])\n\nRows: 613744  Columns: 1279\n\n\nThe original data set has a total of 613,744 rows and 1,279 columns."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#mean-of-plausible-values",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#mean-of-plausible-values",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "3.1 Mean of Plausible Values",
    "text": "3.1 Mean of Plausible Values\nThe stu_qqq_SG.rds. includes 10 Plausible Values (PV) for Math, Reading, and Science each. To assess the performance of SG students in each subject, the average PV for each subject will be calculated as follows:\n\n\nShow the code\nAvg_PVMath &lt;- rowMeans(stu_qqq_SG[, c(\"PV1MATH\", \"PV2MATH\", \"PV3MATH\", \"PV4MATH\", \"PV5MATH\", \"PV6MATH\", \"PV7MATH\", \"PV8MATH\", \"PV9MATH\", \"PV10MATH\")])\nAvg_PVRead &lt;- rowMeans(stu_qqq_SG[, c(\"PV1READ\", \"PV2READ\", \"PV3READ\", \"PV4READ\", \"PV5READ\", \"PV6READ\", \"PV7READ\", \"PV8READ\", \"PV9READ\", \"PV10READ\")])\nAvg_PVScience &lt;- rowMeans(stu_qqq_SG[, c(\"PV1SCIE\", \"PV2SCIE\", \"PV3SCIE\", \"PV4SCIE\", \"PV5SCIE\", \"PV6SCIE\", \"PV7SCIE\", \"PV8SCIE\", \"PV9SCIE\", \"PV10SCIE\")])\n\nPV_Avg &lt;- cbind(stu_qqq_SG[\"CNTSTUID\"], Avg_PVMath, Avg_PVRead, Avg_PVScience)\nwrite_rds(PV_Avg, \"data/stu_qqq_SG_PV_Avg.rds\")\n\nhead(PV_Avg)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience\n1 70200001   605.2533   667.4296      639.7873\n2 70200002   689.9528   627.6078      672.0703\n3 70200003   676.7768   582.9252      660.0384\n4 70200004   401.0528   361.3969      343.6425\n5 70200005   436.1151   475.6763      479.2390\n6 70200006   518.1055   431.4652      476.0031\n\n\nEach SG student’s Avg_PVMath, Avg_PVRead, and Avg_PVScience values reflect their proficiency in Math, Reading, and Science, respectively. In the table above, the first row shows the performance scores of Math, Reading and Science for student “70200001” is 605.2533, 667.4296, 639.7873, respectively.\nRefer to the instruction and the PISA Data Analysis Manual to learn more about Plausible Value."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#distribution-of-performance",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "3.2 Distribution of Performance",
    "text": "3.2 Distribution of Performance\n\n3.2.1 Analyse\n\n3.2.1.1 One Subject\nFirst, let’s see the frequency of each subject’s performance scores by histogram.\nHistogram\n\nMathReadingScience\n\n\n\nggplot(data = PV_Avg, aes(x=Avg_PVMath)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  geom_vline(aes(xintercept = mean(PV_Avg$Avg_PVScience), linetype=\"Mean\", color=\"Mean\"), size=1) +\n  geom_vline(aes(xintercept = median(PV_Avg$Avg_PVScience), linetype=\"Median\", color=\"Median\"), size=1) +\n  scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n  scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n  ggtitle(\"Distribution of SG Students' Science Performance\") +\n  labs(color = \"Statistic\") + \n  theme_test() +\n  theme(\n    legend.position = c(0.9, 0.7),\n    legend.text = element_text(size = 10),\n    legend.key.size = unit(5, \"mm\")\n  )\n\n\n\n\n\n\n\nggplot(data = PV_Avg, aes(x=Avg_PVRead)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  geom_vline(aes(xintercept = mean(PV_Avg$Avg_PVScience), linetype=\"Mean\", color=\"Mean\"), size=1) +\n  geom_vline(aes(xintercept = median(PV_Avg$Avg_PVScience), linetype=\"Median\", color=\"Median\"), size=1) +\n  scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n  scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n  ggtitle(\"Distribution of SG Students' Science Performance\") +\n  labs(color = \"Statistic\") + \n  theme_test() +\n  theme(\n    legend.position = c(0.9, 0.7),\n    legend.text = element_text(size = 10),\n    legend.key.size = unit(5, \"mm\")\n  )\n\n\n\n\n\n\n\nggplot(data = PV_Avg, aes(x=Avg_PVScience)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  geom_vline(aes(xintercept = mean(PV_Avg$Avg_PVScience), linetype=\"Mean\", color=\"Mean\"), size=1) +\n  geom_vline(aes(xintercept = median(PV_Avg$Avg_PVScience), linetype=\"Median\", color=\"Median\"), size=1) +\n  scale_linetype_manual(name = \"Statistic\", values = c(Mean = \"dashed\", Median = \"dashed\")) +\n  scale_color_manual(name = \"Statistic\", values = c(Mean = \"blue\", Median = \"red\")) +\n  ggtitle(\"Distribution of SG Students' Science Performance\") +\n  labs(color = \"Statistic\") + \n  theme_test() +\n  theme(\n    legend.position = c(0.9, 0.7),\n    legend.text = element_text(size = 10),\n    legend.key.size = unit(5, \"mm\")\n  )\n\n\n\n\n\n\n\nThe three histograms depicted above show a left-skewed distribution, indicating that many values are concentrated near the lower end of the range, with infrequent higher values. This is reflected in a mean score lower than the median. This may be due to some students with extremely low scores pulling down the mean, which we can see in the following box plot.\nNext, let’s use box plot to explore more.\nBoxplot\n\nplotcode\n\n\n\n\n\n\n\n\n\n\nPV_Avg_tidy &lt;- PV_Avg %&gt;%\n  pivot_longer(cols = c(Avg_PVMath, Avg_PVRead, Avg_PVScience), names_to = \"Subject\", values_to = \"Score\")\n\nmax_values &lt;- PV_Avg_tidy %&gt;% group_by(Subject) %&gt;% summarise(max_value = max(Score))\n\nggplot(PV_Avg_tidy, aes(x = Subject, y = Score)) +\n  geom_boxplot() +\n  facet_grid(. ~ Subject, scales = \"free_x\") +\n  geom_hline(data = max_values, aes(yintercept = max_value, linetype = \"Max\"), color = \"blue\", show.legend = FALSE) +\n  geom_text(data = max_values, aes(x = Subject, y = max_value, label = sprintf(\"Max: %.2f\", max_value)), size = 3, vjust = -0.5, hjust = 0.5, color = \"blue\") +\n  geom_hline(aes(yintercept = median(Score), linetype = \"Median\"), color = \"red\",show.legend = FALSE) +\n  coord_cartesian(ylim = range(PV_Avg_tidy$Score)) \n\n\n\n\nThe three box plots reveal:\n\nSome students scored extremely low, especially in Reading, followed by Science and Math.\nMedian scores follow the order: Math &gt; Science &gt; Reading.\nMaximum scores follow the order: Math &gt; Science &gt; Reading.\nOver 75% of students scored above 500 in Math and 75% of students scored above 500 in Science, while less than 75% scored above 500 in Reading.\n\nNext, by using density curve, we can see more of the distribution and central tendency of the performance scores.\nDensity curve\n\nplotcode\n\n\n\n\n\n\n\n\n\n\n  peak_math &lt;- density(PV_Avg$Avg_PVMath)$x[which.max(density(PV_Avg$Avg_PVMath)$y)]\n  peak_read &lt;- density(PV_Avg$Avg_PVRead)$x[which.max(density(PV_Avg$Avg_PVRead)$y)]\n  peak_science &lt;- density(PV_Avg$Avg_PVScience)$x[which.max(density(PV_Avg$Avg_PVScience)$y)]\n  \nggplot(data = PV_Avg) +\n  geom_density(aes(x = Avg_PVMath, color = \"Math\"), fill = \"blue\", alpha = 0.2) +\n  geom_density(aes(x = Avg_PVRead, color = \"Reading\"), fill = \"green\", alpha = 0.2) +\n  geom_density(aes(x = Avg_PVScience, color = \"Science\"), fill = \"red\", alpha = 0.2) +\n  ggtitle(\"Density of SG Students' Performance\") +\n  labs(x = \"Average of Plausible Value\") +\n  geom_vline(aes(xintercept = peak_math, color = \"Math\"), linetype = \"dashed\", size = 1) +\n  geom_vline(aes(xintercept = peak_read, color = \"Reading\"), linetype = \"dashed\", size = 1) +\n  geom_vline(aes(xintercept = peak_science, color = \"Science\"), linetype = \"dashed\", size = 1) +\n  geom_text(aes(x = peak_math, y = 0, label = sprintf(\"Math: %.2f\", peak_math)), \n            vjust = - 0.5, hjust = 0.2, color = \"blue\", size = 3) +\n  geom_text(aes(x = peak_read, y = 0, label = sprintf(\"Reading: %.2f\", peak_read)), \n            vjust = - 3.5, hjust = 0.2, color = \"green\", size = 3) +\n  geom_text(aes(x = peak_science, y = 0, label = sprintf(\"Science: %.2f\", peak_science)),\n            vjust = - 8, hjust = 0.2, color = \"red\", size = 3) +\n  scale_color_manual(values = c(\"Math\" = \"blue\", \"Reading\" = \"green\", \"Science\" = \"red\"), name = \"Subject\") +\n  theme_test() +\n  theme(\n    legend.position = c(0.9, 0.8),\n    legend.text = element_text(size = 8),\n    legend.key.size = unit(5, \"mm\")\n  )\n\n\n\n\nThe three density curves above reveal:\n\nThe performance for all three subjects show a tendency towards a leftward skew in their distributions.\nMath scores are centered around 600, Science scores around 580, and Reading scores around 560.\n\nLast, let’s present the distribution by violin plots.\nViolin plot\n\nplotcode\n\n\n\n\n\n\n\n\n\n\nggplot(data = PV_Avg) +\n  geom_violin(aes(x = \"Math\", y = Avg_PVMath, fill = \"Math\"), position = \"dodge\", alpha = 0.5) +\n  geom_violin(aes(x = \"Reading\", y = Avg_PVRead, fill = \"Reading\"), position = \"dodge\", alpha = 0.5) +\n  geom_violin(aes(x = \"Science\", y = Avg_PVScience, fill = \"Science\"), position = \"dodge\", alpha = 0.5) +\n  ggtitle(\"Violin Plot of SG Students' Performance\") +\n  labs(fill = \"Subject\", x = \"Subject\", y = \"Plausible Value\") +\n  theme_test() +\n  theme(\n    legend.position = c(0.9, 0.9),\n    legend.text = element_text(size = 8),\n    legend.key.size = unit(4, \"mm\")\n  )\n\n\n\n\nThe three violin plots reveal:\n\nScores for all three subjects are mainly concentrated between 500-700.\nMath scores are centered above 600, while Reading and Science scores are primarily distributed in the 500-600 range. Moreover, the peak value for Science scores is higher than the peak value for Reading scores.\nThe performance distribution for all three subjects is left-skewed, with the lower half of the violin plots being longer.\n\n\n\n3.2.1.2 Two Subjects\n\nMath vs ReadingMath vs ScienceMath vs Reading\n\n\n\nggplot(data=PV_Avg, \n       aes(x= Avg_PVMath, \n           y= Avg_PVRead)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method=lm, color = \"lightblue\") +\n  geom_text(aes(x = max(Avg_PVMath), y = max(Avg_PVRead),\n                label = paste(\"y = \", round(coef(lm(Avg_PVRead ~ Avg_PVMath))[2], 2), \"x + \", round(coef(lm(Avg_PVRead ~ Avg_PVMath))[1], 2))),\n            hjust = 1.5, vjust = 1, color = \"pink\", size = 5) +\n  ggtitle(\"Math vs Reading\") +\n  labs(x=\"Math Score\", y=\"Reading Score\") +\n  theme_dark()\n\n\n\n\n\n\n\nggplot(data=PV_Avg, \n       aes(x= Avg_PVMath, \n           y= Avg_PVScience)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method=lm, color = \"lightblue\") +\n  geom_text(aes(x = max(Avg_PVMath), y = max(Avg_PVScience),\n                label = paste(\"y = \", round(coef(lm(Avg_PVScience ~ Avg_PVMath))[2], 2), \"x + \", round(coef(lm(Avg_PVScience ~ Avg_PVMath))[1], 2))),\n            hjust = 1.5, vjust = 1, color = \"pink\", size = 5) +\n  ggtitle(\"Math vs Science\") +\n  labs(x=\"Math Score\", y=\"Science Score\") +\n  theme_dark()\n\n\n\n\n\n\n\nggplot(data=PV_Avg, \n       aes(x= Avg_PVScience, \n           y= Avg_PVRead)) +\n  geom_point() +\n  geom_smooth(formula = y ~ x, method=lm, color = \"lightblue\") +\n  geom_text(aes(x = max(Avg_PVScience), y = max(Avg_PVRead),\n                label = paste(\"y = \", round(coef(lm(Avg_PVRead ~ Avg_PVScience))[2], 2), \"x + \", round(coef(lm(Avg_PVRead ~ Avg_PVScience))[1], 2))),\n            hjust = 1.5, vjust = 1, color = \"pink\", size = 5) +\n  ggtitle(\"Science vs Reading\") +\n  labs(x=\"Science Score\", y=\"Reading Score\") +\n  theme_dark()\n\n\n\n\n\n\n\nFrom the three scatter plots above and their respective fit curves, it can be observed that the scores of the three subjects are positively correlated in pairs. As the scores in Math increase, the corresponding scores in Reading and Science also increase, with Science scores being higher. Similarly, when Reading scores are higher, Science scores also tend to be higher.\n\n\n3.2.1.3 Three Subjects\nFrom the three colored scatter plots below, we can observe a positive trend: as the scores of any two subjects increase, the score of the third subject also tends to rise. This is visually represented by lighter colors and higher values towards the upper right corner, indicating superior performance. Conversely, when the scores of any two subjects decrease, the score of the third subject tends to decrease as well, reflected in darker colors and lower values towards the lower left corner. This pattern suggests a positive correlation among the performance scores of the three subjects, highlighting that higher scores in one subject are associated with higher scores in the others.\n\nMath vs Reading with ScienceMath vs Science with ReadingReading vs Science with Math\n\n\n\nggplot(data = PV_Avg, \n       aes(x = Avg_PVMath, \n           y = Avg_PVRead, \n           color = Avg_PVScience)) +\n  geom_point() +\n  ggtitle(\"Math vs Reading with Science\") +\n  labs(x = \"Math Score\", y = \"Reading Score\", color = \"Science Score\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg, \n       aes(x = Avg_PVMath, \n           y = Avg_PVScience, \n           color = Avg_PVRead)) +\n  geom_point() +\n  ggtitle(\"Math vs Science with Reading\") +\n  labs(x = \"Math Score\", y = \"Science Score\", color = \"Reading Score\") +\n  scale_color_continuous(\"Reading Score\", breaks = seq(200, 800, by = 100), \n                          low = \"red\", high = \"pink\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg, \n       aes(x = Avg_PVRead, \n           y = Avg_PVScience, \n           color = Avg_PVMath)) +\n  geom_point() +\n  ggtitle(\"Reading vs Science with Math\") +\n  labs(x = \"Reading Score\", y = \"Science Score\", color = \"Math Score\") +\n  scale_color_continuous(\"Math Score\", breaks = seq(200, 800, by = 100), \n                          low = \"darkgreen\", high = \"lightgreen\") +\n  theme_bw()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#summary",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "3.3 Summary",
    "text": "3.3 Summary"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#gender",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "4.1 Gender",
    "text": "4.1 Gender\nThe code chunk below is for creating another data set which includes SG students’ gender and performance scores in Math, Read and Science. The new data set was saved as stu_qqq_SG_PV_Avg_gender.rds.\n\n\nShow the code\nPV_Avg_gender &lt;- cbind(PV_Avg, gender = stu_qqq_SG$ST004D01T)\nwrite_rds(PV_Avg_gender, \"data/stu_qqq_SG_PV_Avg_gender.rds\")\nhead(PV_Avg_gender)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience gender\n1 70200001   605.2533   667.4296      639.7873      1\n2 70200002   689.9528   627.6078      672.0703      2\n3 70200003   676.7768   582.9252      660.0384      2\n4 70200004   401.0528   361.3969      343.6425      2\n5 70200005   436.1151   475.6763      479.2390      1\n6 70200006   518.1055   431.4652      476.0031      1\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn the original data set, the column “ST004D01T” records student’s gender, “1” represent female, “2” represent male. (Computer-Based Student Questionnaire for Pisa 2022 - Main Survey Version)\n\n\n\n4.1.1 Analyse\nlet’s see how gender influence student’s performance on the three subjects by histogram.\nHistogram\n\nMathReadingScience\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVMath, \n           fill = as.factor(gender))) +\n  geom_histogram(bins = 20, \n                 color = \"black\") +\n  scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                    breaks = c(\"1\", \"2\"), \n                    labels = c(\"Female\", \"Male\")) +\n  labs(fill = \"Gender\", x = \"Math Score\") +\n  ggtitle(\"Performance of Math by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVRead, \n           fill = as.factor(gender))) +\n  geom_histogram(bins = 20, \n                 color = \"black\") +\n  scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                    breaks = c(\"1\", \"2\"), \n                    labels = c(\"Female\", \"Male\")) +\n  labs(fill = \"Gender\", x = \"Reading Score\") +\n  ggtitle(\"Performance of Reading by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVScience, \n           fill = as.factor(gender))) +\n  geom_histogram(bins = 20, \n                 color = \"black\") +\n  scale_fill_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                    breaks = c(\"1\", \"2\"), \n                    labels = c(\"Female\", \"Male\")) +\n  labs(fill = \"Gender\", x = \"Science Score\") +\n  ggtitle(\"Performance of Science by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nFrom the three histograms above:\n\nOverall, male and female performances are fairly balanced in all three subjects, with similar proportions across most score ranges, except for scores above 700.\nIn the high-score range (above 700), particularly near 800, by looking at the proportion, there are more males excelling in Math and Science, while females excel in Reading.\n\nNext, let’s explore more by density curve.\nDensity curve\n\nMathReadingScience\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVMath, \n           color = as.factor(gender))) +\n  geom_density(alpha = 0, size = 1) +\n  scale_color_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                     breaks = c(\"1\", \"2\"), \n                     labels = c(\"Female\", \"Male\")) +\n  labs(color = \"Gender\", x = \"Math Score\") +\n  ggtitle(\"Density Plot of Math Performance by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVRead, \n           color = as.factor(gender))) +\n  geom_density(alpha = 0, size = 1) +\n  scale_color_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                     breaks = c(\"1\", \"2\"), \n                     labels = c(\"Female\", \"Male\")) +\n  labs(color = \"Gender\", x = \"Reading Score\") +\n  ggtitle(\"Density Plot of Reading Performance by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_gender, \n       aes(x = Avg_PVScience, \n           color = as.factor(gender))) +\n  geom_density(alpha = 0, size = 1) +\n  scale_color_manual(values = c(\"1\" = \"pink\", \"2\" = \"lightblue\"), \n                     breaks = c(\"1\", \"2\"), \n                     labels = c(\"Female\", \"Male\")) +\n  labs(color = \"Gender\", x = \"Science Score\") +\n  ggtitle(\"Density Plot of Science Performance by Gender\") +\n  theme_bw()\n\n\n\n\n\n\n\nFrom the above three density curves, we can observe the following:\n\nBoth male and female students exhibit a left-skewed trend in their performance scores across the three subjects.\nIn terms of Math performance, female scores are concentrated around 600, while male scores are concentrated around 650, indicating that the majority of male students perform better in mathematics than the majority of female students.\nRegarding Reading performance, both male and female scores are concentrated around 550-600, approximately at 580. In the lower score range (&lt;500), there are more male students, represented by the area under the curve below 500 being larger for males than females. Similarly, in the higher score range (&gt;600), there are more female students, represented by the area under the curve above 600 being larger for females than males. This suggests that the majority of female students outperform male students in reading.\nIn Science performance, female scores are concentrated below 600 (around 580), while male scores are concentrated above 600 (around 610). This indicates that the majority of male students perform better in science than the majority of female students. In the higher score range (&gt;600), there are more male students, represented by the area under the curve above 600 being larger for males than females.\n\n\n\n4.1.2 Summary"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#school",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "4.2 School",
    "text": "4.2 School\nThe code chunk below is for creating another data set which includes SG schools and performance scores in Math, Read and Science. The new data set was saved as stu_qqq_SG_PV_Avg_school.rds.\n\n\nShow the code\nPV_Avg_school &lt;- cbind(PV_Avg, school = stu_qqq_SG$CNTSCHID)\nwrite_rds(PV_Avg_school, \"data/stu_qqq_SG_PV_Avg_school.rds\")\nhead(PV_Avg_school)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience   school\n1 70200001   605.2533   667.4296      639.7873 70200052\n2 70200002   689.9528   627.6078      672.0703 70200134\n3 70200003   676.7768   582.9252      660.0384 70200112\n4 70200004   401.0528   361.3969      343.6425 70200004\n5 70200005   436.1151   475.6763      479.2390 70200152\n6 70200006   518.1055   431.4652      476.0031 70200043\n\n\nThe code chunk below is for the calculation of the total number of schools surveyed in the questionnaire, as well as the number of respondents for each school.\n\n\nShow the code\nschool_counts &lt;- PV_Avg_school %&gt;%\n  group_by(school) %&gt;%\n  summarise(STUCount = n_distinct(CNTSTUID))\n\nschool_counts\n\n\n# A tibble: 164 × 2\n     school STUCount\n      &lt;dbl&gt;    &lt;int&gt;\n 1 70200001       55\n 2 70200002       38\n 3 70200003       36\n 4 70200004       56\n 5 70200005       38\n 6 70200006       36\n 7 70200007       38\n 8 70200008       38\n 9 70200009       36\n10 70200010       36\n# ℹ 154 more rows\n\n\n\n\nShow the code\ntotal_schools &lt;- n_distinct(school_counts$school)\ncat(\"There are\", total_schools, \"SG schools in this data set.\")\n\n\nThere are 164 SG schools in this data set.\n\n\nThe code chunk below calculates the mean scores for Math, Reading and Science for all surveyed students in each school. This process provides representative scores for three subjects for each school.\n\n\nShow the code\nPV_Avg_school_group &lt;- PV_Avg_school %&gt;%\n  group_by(school) %&gt;%\n  summarise(\n    School_Avg_PVMath = mean(Avg_PVMath),\n    School_Avg_PVRead = mean(Avg_PVRead),\n    School_Avg_PVScience = mean(Avg_PVScience)\n  )\n\n# Print the first few rows of the new data set\nwrite_rds(PV_Avg_school_group, \"data/stu_qqq_SG_PV_Avg_school_group.rds\")\nhead(PV_Avg_school_group)\n\n\n# A tibble: 6 × 4\n    school School_Avg_PVMath School_Avg_PVRead School_Avg_PVScience\n     &lt;dbl&gt;             &lt;dbl&gt;             &lt;dbl&gt;                &lt;dbl&gt;\n1 70200001              725.              653.                 698.\n2 70200002              535.              507.                 534.\n3 70200003              740.              665.                 714.\n4 70200004              510.              480.                 494.\n5 70200005              547.              516.                 529.\n6 70200006              487.              468.                 477.\n\n\n\n4.2.1 Analyse\nLet’s see the schools performance by dot plot.\nDot plot\n\nSchool vs MathSchool vs ReadingSchool vs Science\n\n\n\nggplot(data = PV_Avg_school_group, aes(x = school, y = School_Avg_PVMath)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm) +\n  ggtitle(\"Dot Plot of Math Score by School\") +\n  labs(y = \"Math Score\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_school_group, aes(x = school, y = School_Avg_PVRead)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm) +\n  ggtitle(\"Dot Plot of Reading Score by School\") +\n  labs(y = \"Reading Score\") +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data = PV_Avg_school_group, aes(x = school, y = School_Avg_PVScience)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm) +\n  ggtitle(\"Dot Plot of Science Score by School\") +\n  labs(y = \"Science Score\") +\n  theme_bw()\n\n\n\n\n\n\n\nFrom the three dot plots above, we can get:\n\nIn Math, most schools have students scoring between 500-600, with the next common range being 600-700. Two schools scored above 700, while two schools had notably lower scores around 400.\nIn Reading, majority of schools show scores between 450-550, followed by 550-650. Five schools scored above 650, but two schools had notably low scores, falling below 400, with one even below 350.\nIn Science, In most schools, students scored between 500-600, followed by 600-700. Two schools scored high (around 700), while two schools scored low (under 400).\nThe three plots’ shapes are similar, indicating consistent performance across subjects. Schools either perform well, average, or poorly in all subjects. Few schools show better reading performance than in math and science.\nTwo schools consistently excel (upper left), while two consistently perform poorly (lower right) across all subjects.\nThough subtle, there’s a slight downward trend in the fit curve, suggesting that as school codes increase, scores may potentially decrease.\n\n\n\n4.2.2 Summary"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#socioeconomic-status",
    "title": "Creating Data Visualisation Beyond Default",
    "section": "4.3 Socioeconomic status",
    "text": "4.3 Socioeconomic status\nThe code chunk below is for creating another data set which includes SG socioeconomic status and performance scores in Math, Read and Science. The new data set was saved as stu_qqq_SG_PV_Avg_status.rds.\n\n\nShow the code\nPV_Avg_status &lt;- cbind(PV_Avg, status = stu_qqq_SG$ST259Q01JA)\nwrite_rds(PV_Avg_status, \"data/stu_qqq_SG_PV_Avg_status.rds\")\nhead(PV_Avg_status)\n\n\n  CNTSTUID Avg_PVMath Avg_PVRead Avg_PVScience status\n1 70200001   605.2533   667.4296      639.7873     NA\n2 70200002   689.9528   627.6078      672.0703     NA\n3 70200003   676.7768   582.9252      660.0384     NA\n4 70200004   401.0528   361.3969      343.6425     NA\n5 70200005   436.1151   475.6763      479.2390     NA\n6 70200006   518.1055   431.4652      476.0031     NA\n\n\n\nglimpse(PV_Avg_status)\n\nRows: 6,606\nColumns: 5\n$ CNTSTUID      &lt;dbl&gt; 70200001, 70200002, 70200003, 70200004, 70200005, 702000…\n$ Avg_PVMath    &lt;dbl&gt; 605.2533, 689.9528, 676.7768, 401.0528, 436.1151, 518.10…\n$ Avg_PVRead    &lt;dbl&gt; 667.4296, 627.6078, 582.9252, 361.3969, 475.6763, 431.46…\n$ Avg_PVScience &lt;dbl&gt; 639.7873, 672.0703, 660.0384, 343.6425, 479.2390, 476.00…\n$ status        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n\n\n\n4.3.1 Analyse\n\n\n4.3.2 Summary"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html",
    "title": "Importing Data",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are: tidyverse, and haven.\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#loading-r-packages",
    "title": "Importing Data",
    "section": "",
    "text": "In this hands-on exercise, two R packages will be used. They are: tidyverse, and haven.\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "href": "In-class_Ex/In-class_Ex01/In-class_Ex01.html#importing-pisa-data",
    "title": "Importing Data",
    "section": "Importing PISA data",
    "text": "Importing PISA data\nThe code chunk below uses read_sas() of haven to import PISA data (Student questionnaire data file) into environment.\n\nstu_qqq&lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\nFilter the table using filter()\n\nstu_qqq_SG &lt;- stu_qqq %&gt;% filter(CNT == \"SGP\")\n\nWrite records into the data file.\n\nwrite_rds(stu_qqq_SG, \"data/stu_qqq_SG.rds\")\n\nRead data file.\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "The code chunk below use p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\nThe tidyverse is a package in R which includes a collection of packages for tasks such as data processing, visualization, statistical modeling, and more. Some commonly used packages within the tidyverse are ggplot2, dplyr, tidyr, readr, tibble, and purrr.\n\n\n\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThis data set contains 322 student data, with 7 data for each student. Four categorical attributes: ID, class, gender, race. Three continuous attributes: English score, Math scores, Science score."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#installing-and-loading-required-libraries",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "The code chunk below use p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\nThe tidyverse is a package in R which includes a collection of packages for tasks such as data processing, visualization, statistical modeling, and more. Some commonly used packages within the tidyverse are ggplot2, dplyr, tidyr, readr, tibble, and purrr."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-data",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "exam_data &lt;- read.csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\nThis data set contains 322 student data, with 7 data for each student. Four categorical attributes: ID, class, gender, race. Three continuous attributes: English score, Math scores, Science score."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.1 Data",
    "text": "3.1 Data\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot() initializes a ggplot object.\nThe data argument defines the data set to be used for plotting.\nIf the data set is not already a data.frame, it will be converted to one by .fortify()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#aesthetic-mappings",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.2 Aesthetic mappings",
    "text": "3.2 Aesthetic mappings\nHere for showing the x-axis and y-axis of the plot. The aesthetic mappings take attributes of the data. For example, Class, Gender, Race, English, Maths, Science.\n\nggplot(data=exam_data, \n       aes(x= MATHS))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.3 geom",
    "text": "3.3 geom\n\n\n3.3.1 geom_bar()\n\nggplot(data = exam_data,\n       aes(x=RACE))+\n  geom_bar()\n\n\n\n\n\n\n3.3.2 geom_dotplot()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\nThe y scale above is very misleading. Next step is to turn-off y scale using scale_y_continuous() and change the binwidth to 2.5\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)  \n\n\n\n\n\n\n3.3.3 geom_histogram()\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()       \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\nModify histogram\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"lightblue\")  \n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"black\")\n\n\n\n\n\n\n3.3.4 geom_density()\n\nOne kernel densityTwo kernel density\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()           \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n3.3.5 geom_boxplot\ngeom_boxplot() displays continuous value list. It visualizes five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()            \n\n\n\n\nIf the median value is similar, use geom_boxplot(notch=TRUE) to get a clear difference.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n3.3.6 geom_violin()\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n3.3.7 geom_point()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()            \n\n\n\n\n\n\n3.3.8 Combine geom objects\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)        \n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nposition=\"jitter\" introduces small random displacements to the positions of data points to prevent overlapping on the chart."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.4 stat",
    "text": "3.4 stat\n\n3.4.1 Statistic dot value\n\nstat_summary()geom_point(stat = “summary”)\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun=\"mean\",         \n               colour =\"red\",        \n               size=2)               \n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour =\"red\",          \n             size=2)          \n\n\n\n\n\n\n\n\n\n3.4.2 Fit curve\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(formula = y~x , linewidth=0.5)\n\n`geom_smooth()` using method = 'loess'\n\n\n\n\n\nChange the line method. The default method is loess. Change it to lm.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(formula = y~x , method=lm, linewidth=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facets",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.5 Facets",
    "text": "3.5 Facets\n\n3.5.1 facet_wrap()\nPutting multiple plot together. Showing 2d difference.\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n3.5.2 facet_grid()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coordinates",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.6 Coordinates",
    "text": "3.6 Coordinates\n\n3.6.1 Changing orientation\nFlip the horizontal bar chart into vertical bar chart by using coord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n3.6.2 Changing the data range\nChange the y-axis and x-axis range by using coord_cartesian()\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(formula = y~x , method=lm, linewidth=0.5) +  \n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#themes",
    "title": "A Layered Grammar of Graphics: ggplot2 methods",
    "section": "3.7 Themes",
    "text": "3.7 Themes\nBuilt-in themes include: -.(default), -.theme_gray(), -.theme_bw(), -.theme_classic(), -.theme_minimal()\n\ntheme_graytheme_bwtheme_classictheme_minimal\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_bw()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "Beside tidyverse , the below R packages will be utilised in this exercise:\n\n\n\n\n\n\n\nPackage\nFunction\n\n\n\n\nggrepel\nprovides geoms for ggplot2 to repel overlapping text labels.\n\n\nggthemes\nprovides some extra themes, geoms, and scales for ggplot2.\n\n\nhrbrthemes\nprovides typography-centric themes and theme components for ggplot2.\n\n\npatchwork\nfor preparing composite figure created using ggplot2.\n\n\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse) \n\n\n\n\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in .csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\n\nhead(exam_data)\n\n          ID CLASS GENDER    RACE ENGLISH MATHS SCIENCE\n1 Student321    3I   Male   Malay      21     9      15\n2 Student305    3I Female   Malay      24    22      16\n3 Student289    3H   Male Chinese      26    16      16\n4 Student227    3F   Male Chinese      27    77      31\n5 Student318    3I   Male   Malay      27    11      25\n6 Student306    3I Female   Malay      31    16      16\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "Beside tidyverse , the below R packages will be utilised in this exercise:\n\n\n\n\n\n\n\nPackage\nFunction\n\n\n\n\nggrepel\nprovides geoms for ggplot2 to repel overlapping text labels.\n\n\nggthemes\nprovides some extra themes, geoms, and scales for ggplot2.\n\n\nhrbrthemes\nprovides typography-centric themes and theme components for ggplot2.\n\n\npatchwork\nfor preparing composite figure created using ggplot2.\n\n\n\n\npacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "For the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in .csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read.csv(\"data/Exam_data.csv\")\nglimpse(exam_data)\n\nRows: 322\nColumns: 7\n$ ID      &lt;chr&gt; \"Student321\", \"Student305\", \"Student289\", \"Student227\", \"Stude…\n$ CLASS   &lt;chr&gt; \"3I\", \"3I\", \"3H\", \"3F\", \"3I\", \"3I\", \"3I\", \"3I\", \"3I\", \"3H\", \"3…\n$ GENDER  &lt;chr&gt; \"Male\", \"Female\", \"Male\", \"Male\", \"Male\", \"Female\", \"Male\", \"M…\n$ RACE    &lt;chr&gt; \"Malay\", \"Malay\", \"Chinese\", \"Chinese\", \"Malay\", \"Malay\", \"Chi…\n$ ENGLISH &lt;int&gt; 21, 24, 26, 27, 27, 31, 31, 31, 33, 34, 34, 36, 36, 36, 37, 38…\n$ MATHS   &lt;int&gt; 9, 22, 16, 77, 11, 16, 21, 18, 19, 49, 39, 35, 23, 36, 49, 30,…\n$ SCIENCE &lt;int&gt; 15, 16, 16, 31, 25, 16, 25, 27, 15, 37, 42, 22, 32, 36, 35, 45…\n\n\n\nhead(exam_data)\n\n          ID CLASS GENDER    RACE ENGLISH MATHS SCIENCE\n1 Student321    3I   Male   Malay      21     9      15\n2 Student305    3I Female   Malay      24    22      16\n3 Student289    3H   Male Chinese      26    16      16\n4 Student227    3F   Male Chinese      27    77      31\n5 Student318    3I   Male   Malay      27    11      25\n6 Student306    3I Female   Malay      31    16      16\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nThe categorical attributes are: ID, CLASS, GENDER and RACE.\nThe continuous attributes are: MATHS, ENGLISH and SCIENCE."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#classic-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#classic-themes",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "3.1 Classic themes",
    "text": "3.1 Classic themes\nThe following table shows some classic built-in themes in ggplot2.\n\n\n\n\n\n\n\nTheme\nDescription\n\n\n\n\ntheme_gray()\na theme with grey background and white grid lines\n\n\ntheme_bw()\ndark-on-light\n\n\ntheme_linedraw()\na theme with with only black lines of various widths on white backgrounds\n\n\ntheme_light()\na theme with light grey lines and axes\n\n\ntheme_dark()\na dark background\n\n\ntheme_minimal()\na minimalistic theme with no background annotations\n\n\ntheme_classic()\na theme with x and y axis lines and no grid lines\n\n\ntheme_void()\na completely empty theme\n\n\ntheme_test()\na theme for visual unit tests\n\n\n\nRefer to this link to learn more about ggplot2 themes.\n\ntheme_graytheme_bwtheme_linedrawtheme_darktheme_minimaltheme_classictheme_voidtheme_test\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_bw() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_linedraw() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_dark() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_minimal() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_classic() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_void() +\n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  theme_test() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme-templates",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#theme-templates",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "3.2 Theme templates",
    "text": "3.2 Theme templates\nRefer to this link to learn some template of ggplot themes used by famous institutions. For example,\n\ntheme_wsjtheme_economisttheme_statatheme_exceltheme_fivethirtyeighttheme_tufte\n\n\n\n# The Wall Street Journal\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = 15))\n\n\n\n\n\n\n\n# The Economist\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n# Stata\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_stata()\n\n\n\n\n\n\n\n# Excel\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_excel()\n\n\n\n\n\n\n\n# Fivethirtyeight\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_fivethirtyeight()\n\n\n\n\n\n\n\n# Edward Tufte\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_tufte()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#custom-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#custom-theme",
    "title": "Beyond ggplot2 Fundamentals",
    "section": "3.3 Custom theme",
    "text": "3.3 Custom theme\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used. We can use this package to custom the plot.\n\nDefaultCustom\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18, base_size = 15, grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18.\nbase_size argument is used to increase the default axis label to 15.\ngrid argument is used to remove the x-axis grid lines."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to Yaling’s Visual Analysis Wonderland!",
    "section": "",
    "text": "At present, this website is for showcasing coursework of\nISSS608 Visual Analytics and Applications.\nThanks for visiting. Please kindly let me know if anything needs to be amended.\n\n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\nFile Name\n\n\nModified\n\n\n\n\n\n\nJan 11, 2024\n\n\nA Layered Grammar of Graphics: ggplot2 methods\n\n\nHands-on_Ex01.qmd\n\n\n1/18/24, 8:59:20 PM\n\n\n\n\nJan 13, 2024\n\n\nImporting Data\n\n\nIn-class_Ex01.qmd\n\n\n1/14/24, 5:15:06 PM\n\n\n\n\nJan 14, 2024\n\n\nCreating Data Visualisation Beyond Default\n\n\nTake-home_Ex01.qmd\n\n\n1/20/24, 3:24:08 PM\n\n\n\n\nJan 16, 2024\n\n\nBeyond ggplot2 Fundamentals\n\n\nHands-on_Ex02.qmd\n\n\n1/19/24, 4:54:22 PM\n\n\n\n\nJan 20, 2024\n\n\nTableau Introduction\n\n\nIn-class_Exercise02.qmd\n\n\n1/20/24, 3:28:22 PM\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Exercise02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Exercise02.html",
    "title": "Tableau Introduction",
    "section": "",
    "text": "Link to Tableau Public:\nTableau Practice of Lesson 2\n\n\n\n Back to top"
  }
]